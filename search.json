[{"path":"https://facelab.github.io/webmorph/articles/figures.html","id":"load-stimuli","dir":"Articles","previous_headings":"","what":"Load stimuli","title":"Making Figures","text":"","code":"stimuli <- demo_stim() plot(stimuli)"},{"path":"https://facelab.github.io/webmorph/articles/figures.html","id":"borders-and-background","dir":"Articles","previous_headings":"","what":"Borders and Background","title":"Making Figures","text":"can add border image using pad. Values less 1 set border width percentage image width, values greater 1 set pixels. can also change border colour using fill.  can set different border sizes top, right, bottom left sides (think “TRouBLe”). can useful creating space labels outside image.  can set border colour separately image.","code":"stimuli |>   pad(0.05, fill = \"hotpink\") |>   plot() stimuli |>   pad(80, 0, 0, 0, fill = \"black\") |>   label(color = \"white\") |>   plot() stimuli |>   pad(10, fill = c(\"#F9DEC9\", \"#BAEDDD\")) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/figures.html","id":"rows-and-columns","dir":"Articles","previous_headings":"","what":"Rows and columns","title":"Making Figures","text":"Set nrow ncol control number rows columns.  Set byrow = FALSE order images column instead default. can control space images padding. ’d set maxwidth globally top script using wm_opts(), can also set maxwidth maxheight specific plot.","code":"comp <- demo_stim(\"composite\") |> resize(0.5)  plot(comp, nrow = 2) plot(comp, ncol = 2, byrow = FALSE, padding = 0, maxheight = 850*2)"},{"path":"https://facelab.github.io/webmorph/articles/figures.html","id":"multipart-figure","dir":"Articles","previous_headings":"","what":"Multipart figure","title":"Making Figures","text":"make multipart figure, usually don’t want padding around outside component image, set external_pad = FALSE. Set byrow = FALSE distribute images column.","code":"# make the centre columns ind <- comp[c(1:2,4:7,9:10)] |>   plot(ncol = 2, byrow = FALSE, padding = 60, external_pad = FALSE)  # add multi-ethnic composites to left and right on centre column c(comp[3], ind, comp[8]) |>   resize(height = 500) |> # make sure parts are the same height   plot(nrow = 1)"},{"path":"https://facelab.github.io/webmorph/articles/figures.html","id":"labels","dir":"Articles","previous_headings":"","what":"Labels","title":"Making Figures","text":"two labelling functions: mlabel() uses syntax like magick::image_annotate() configure labels gglabel() uses syntax like ggplot2::annotate() configure labels. slightly different features, use probably determined whether ’re familiar magick ggplot. label() function defaults mlabel() unless use arguments used gglabel().","code":""},{"path":"https://facelab.github.io/webmorph/articles/figures.html","id":"mlabel","dir":"Articles","previous_headings":"Labels","what":"mlabel()","title":"Making Figures","text":"Label figure panels image name.  Use setnames() function set new names.  Alternatively, set text vector labels use. Labels can positioned gravity location arguments {magick} package. example , text positioned northwest (upper-left) corner, 10 pixels right 5 pixels .  can customise labels , including vectors different value image. Vectors long truncated short vectors recycled.","code":"stimuli |>   mlabel() |>   plot() demo_stim(\"composite\") |>   setnames(pattern = \"f_\", replacement = \"Female \") |>   setnames(pattern = \"m_\", replacement = \"Male \") |>   label() |>   plot(nrow = 2) stimuli |>   label(     text = c(\"Female\", \"Male\"),     gravity = \"northwest\",     location = \"+10+5\",     color = c(\"darkgreen\", \"darkmagenta\"),     size = 40,      style = c(\"normal\", \"italic\")   ) |>   plot() directions <- c(\"north\", \"northeast\", \"east\", \"southeast\",                  \"south\", \"southwest\", \"west\", \"northwest\")  rep(stimuli, 4) |>   label(     text = paste0(\" \", directions, \" \"),     gravity = directions,     color = \"white\",     boxcolor = rainbow(4),     strokecolor = \"black\",     font = \"Arial\",     weight = 800,     style = \"italic\",     kerning = 1.2   ) |>   plot(nrow = 2) stimuli |>   label(TRUE,         color = \"dodgerblue3\",         size = 40,         weight = 700,         gravity = \"southwest\",         location = c(\"+10+100\", \"+10+110\"),         degrees = 45   ) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/figures.html","id":"gglabel","dir":"Articles","previous_headings":"Labels","what":"gglabel()","title":"Making Figures","text":"Label figure panels image name.  Set label vector labels use. default font size used ggplot pretty small, increase size. can’t help set argument; just use trial--error. Labels can positioned x y arguments. Unlike mlabel(), origin lower left corner, setting label 5 pixel top requires calculate image height subtract 5. However, unlike ggplot, x y values less equal 1 interpreted percentages. Adjust label alignment hjust vjust.  can customise labels , including vectors different value image. Vectors long truncated short vectors recycled. “label” geom lets set fill passing labels.  can set alpha angle create watermarked images.","code":"stimuli |>   gglabel() |>   plot() stimuli |>   label(     label = c(\"Female\", \"Male\"),     size = 15,     x = 10,  y = height(stimuli) - 5,     hjust = 0, vjust = 1,     color = c(\"darkgreen\", \"darkmagenta\"),     fontface = c(\"plain\", \"italic\")   ) |>   plot() directions <- c(\"north\", \"northeast\", \"east\", \"southeast\",                  \"south\", \"southwest\", \"west\", \"northwest\")  rep(stimuli, 4) |>   label(     geom = \"label\",     label = directions,     size = 10,     x = c(0.5, 1, 1, 1, 0.5, 0, 0, 0),     y = c(1, 1, 0.5, 0, 0, 0, 0.5, 1),     hjust = c(0.5, 1, 1, 1, 0.5, 0, 0, 0),     vjust = c(1, 1, 0.5, 0, 0, 0, 0.5, 1),     color = \"white\",     fill = rainbow(4),     family = \"Arial\",     fontface = \"bold.italic\",     label.padding = unit(3, \"mm\"),     label.r = unit(0.5, \"lines\"), # round corners     label.size = unit(1, \"lines\") # label border   ) |>   plot(nrow = 2) stimuli |>   label(     label = \"watermark\",     x = 0.5,     y = 0.5,     geom = \"text\",     size = 20,     color = \"black\",     fontface = \"bold\",     angle = -30,     alpha = 0.25   ) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/figures.html","id":"other-annotations","dir":"Articles","previous_headings":"Labels","what":"Other annotations","title":"Making Figures","text":"gglabel() function mainly meant “text” “label” geoms, can use ggplot geoms.  script took 0.3 minutes render included images scratch.","code":"# get eye points and calculate mean x and y coordinates for each image intercepts <- get_point(stimuli, 0:1) |>   group_by(image) |>   summarise(x = mean(x),             y = mean(y),             .groups = \"drop\") |>   # face coordinate y-axis is opposite to ggplot y-axis   mutate(y = height(stimuli) - y) stimuli |>   label(     geom = \"rect\",     xmin = 0,     xmax = intercepts$x,     ymin = 0,      ymax = intercepts$y,     fill = \"grey\"   ) |>   label(     geom = \"vline\",     xintercept = intercepts$x,     color = \"red\", size = 2   ) |>   label(     geom = \"hline\",     yintercept = intercepts$y,     color = \"purple\", size = 2   ) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"load-your-images","dir":"Articles","previous_headings":"","what":"Load your images","title":"Image Manipulations","text":"","code":"stimuli <- demo_stim(\"composite\", \"multi\")"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"resize","dir":"Articles","previous_headings":"","what":"Resize","title":"Image Manipulations","text":"Resizing images start chain can make everything go faster ’re working large images, can make blurry make small. Resized Images","code":"stimuli |>   resize(.05) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"rotate","dir":"Articles","previous_headings":"","what":"Rotate","title":"Image Manipulations","text":"Rotated Images Templates","code":"stimuli |>   rotate(45, patch = TRUE) |>   draw_tem() |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"crop","dir":"Articles","previous_headings":"","what":"Crop","title":"Image Manipulations","text":"can set new width, height, x-offset y-offset pixels (must > 2) proportions. Cropped Images Templates","code":"stimuli |>   crop(width = .6, height = .8,         x_off = .2, y_off = .1) |>   draw_tem() |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"pad","dir":"Articles","previous_headings":"","what":"Pad","title":"Image Manipulations","text":"Pad top, right, bottom left borders; set colour fill. Padded Images Templates can use patch function get median colour patch image. set patch TRUE, default top left 10 pixel square. Cropped images background matched top left 10-pixel square can set boundaries patch manually. code sets patch colour average colour 100x100-pixel square center image. Cropped Images background matched centre.","code":"stimuli |>   pad(top = 100, right = 200, bottom = 300, left = 400,        fill = c(\"dodgerblue\", \"hotpink\")) |>   plot() rb <- demo_stim(\"rainbow\")[1:8]  rb |>   pad(50, patch = TRUE) |>   plot(nrow = 2) # get stimuli  # get center x and y coordinates of each image cx <- width(rb)/2 cy <- height(rb)/2 r <- 50 # half-height of patch   rb |>   pad(50, patch = list(x1 = cx - r,                         x2 = cx + r,                         y1 = cy - r,                         y2 = cy + r)) |>   plot(nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"crop-to-template","dir":"Articles","previous_headings":"","what":"Crop to Template","title":"Image Manipulations","text":"can use crop_tem() function get minimum maximum x- y-values list templates, use set cropping. example , images cropped 100 pixels padding around boundaries, calculated across images.  Set TRUE calculate boundaries separately template list instead full set.","code":"lisa <- demo_stim(\"lisa\")  crop_tem(lisa, 100) |>   draw_tem() |>   plot() lisa |>   crop_tem(20, each = TRUE) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"to-size","dir":"Articles","previous_headings":"","what":"To Size","title":"Image Manipulations","text":"functionto_size() combines crop resize get batch images size. 10-pixel pink border added original images can see cropped subsequent images.  code resizes image fit 300 x 400 pixel image fills extra background blue. Set keep_rels = TRUE brings largest image fit new size, resize others proportionally, pad.  Set crop = TRUE bring images cover new size crop “overhang”. need set fill color padding crop TRUE.  Set keep_rels = TRUE bring smallest image cover new size, resize others proportionally, crop overhang.","code":"s <- demo_stim()[1] multisize <- c(     s,     s |> resize(.5),     s |> crop(0.6),     s |> crop(1, 0.8)   ) |> pad(10, fill = \"hotpink\") fit_pad <- to_size(multisize, 300, 400, fill = \"dodgerblue\") plot(fit_pad) rel_pad <- to_size(multisize, 300, 400, fill = \"dodgerblue\", keep_rels = TRUE) plot(rel_pad) fit_crop <- to_size(multisize, 300, 400, crop = TRUE) plot(fit_crop) rel_crop <- to_size(multisize, 300, 400, crop = TRUE, keep_rels = TRUE) plot(rel_crop)"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"align","dir":"Articles","previous_headings":"","what":"Align","title":"Image Manipulations","text":"can align set images two points. default, first two points template, correspond left right eye standard FRL template Face++ autodelineation template.  set misaligned images don’t fill coordinates dimensions, align() align coordinates dimensions first image.  can specify reference image index name.","code":"stimuli |>   align(x1 = 350, y1 = 350, x2 = 450, y2 = 450,         width = 800, height = 800, fill = \"grey80\") |>   draw_tem() |>   plot() align(lisa, fill = \"grey80\") |>    plot() align(lisa, ref_img = \"lisa3\", patch = TRUE) |>    plot()"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"procrustes-align","dir":"Articles","previous_headings":"","what":"Procrustes Align","title":"Image Manipulations","text":"can set procrustes argument TRUE procrustes-align images templates.  Currently, webmorph capability, can download images tems, procrustes align R package, save images templates, upload back webmorph.","code":"align(lisa, procrustes = TRUE, patch = TRUE) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"chaining","dir":"Articles","previous_headings":"","what":"Chaining","title":"Image Manipulations","text":"can also chain image manipulation commands.","code":"stimuli |>   rotate(c(45, -45)) |>   crop(.5, .5) |>   pad(0.1, fill = \"dodgerblue\") |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"repeating-images","dir":"Articles","previous_headings":"","what":"Repeating images","title":"Image Manipulations","text":"can use rep() repeat images stimuli. , repeat faces 3 times , apply 6 different rotations different background colours, crop size, plot 6 different template point colours.","code":"rainbow <- c(pink = \"#983E82\",              orange = \"#E2A458\",              yellow = \"#F5DC70\",              green = \"#59935B\",              blue = \"#467AAC\",              purple = \"#61589C\")  stimuli |>   resize(0.5) |>   rep(each = 3) |>   rotate(seq(10, 60, 10), fill = rainbow) |>   crop(250, 250, fill = rainbow) |>   draw_tem(pt.color = rainbow, pt.alpha = 1, pt.size = 5) |>   plot(nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/manip.html","id":"image-functions","dir":"Articles","previous_headings":"","what":"Image functions","title":"Image Manipulations","text":"can many things {magick} package installed {webmorph}. function image_func() just convenient wrapper allows apply {magick} functions (function takes magick image first argument) image stimulus list.  possible {magick} functions listed image_func_types(). Check magick package help info (e.g., ?magick::image_oilpaint. script took 0.4 minutes render included images scratch.","code":"stimuli <- demo_stim(\"test\", \"m_\") imglist <- c(   image_func(stimuli, \"blur\", radius = 10, sigma = 5),   image_func(stimuli, \"charcoal\", radius = 5, sigma = 2),   image_func(stimuli, \"oilpaint\", radius = 5),   image_func(stimuli, \"implode\", factor = 0.25),   image_func(stimuli, \"implode\", factor = -0.25),   image_func(stimuli, \"negate\"),   # canny edge detection format is {radius}x{sigma}+{lower%}+{upper%}   image_func(stimuli, \"canny\", geometry = \"0x1+10%+30%\"),   image_func(stimuli, \"edge\", radius = 2),   image_func(stimuli, \"modulate\", brightness = 80),   image_func(stimuli, \"modulate\", brightness = 120),   image_func(stimuli, \"modulate\", saturation = 0),   image_func(stimuli, \"modulate\", saturation = 110) )  labs <- c(\"Blur\", \"Charcoal\", \"Oilpaint\", \"Implode\",           \"Explode\", \"Negate\", \"Canny\", \"Edge\",            \"20% Darker\", \"20% Brighter\", \"Greyscale\", \"Saturated\")  imglist |>   pad(80, 0, 0, 0, fill = \"dodgerblue3\") |>   label(labs, color = \"white\") |>   plot(nrow = 3) image_func_types() #>  [1] \"annotate\"       \"apply\"          \"average\"        \"background\"     #>  [5] \"blur\"           \"canny\"          \"channel\"        \"charcoal\"       #>  [9] \"colorize\"       \"combine\"        \"composite\"      \"contrast\"       #> [13] \"convert\"        \"convolve\"       \"despeckle\"      \"edge\"           #> [17] \"emboss\"         \"enhance\"        \"equalize\"       \"fill\"           #> [21] \"flatten\"        \"fuzzycmeans\"    \"fx\"             \"fx_sequence\"    #> [25] \"implode\"        \"lat\"            \"level\"          \"map\"            #> [29] \"median\"         \"modulate\"       \"morphology\"     \"motion_blur\"    #> [33] \"negate\"         \"noise\"          \"normalize\"      \"oilpaint\"       #> [37] \"ordered_dither\" \"page\"           \"quantize\"       \"reducenoise\"    #> [41] \"repage\"         \"separate\"       \"set_defines\"    \"shade\"          #> [45] \"strip\"          \"threshold\"      \"transparent\""},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"delineations","dir":"Articles","previous_headings":"","what":"Delineations","title":"Templates and Masking","text":"delineation description shape face using points connected lines. points describe index x y coordinates. upper left corner 0 origin, y-coordinates may go opposite direction expect. function can get selected point coordinates whole stimulus list. lines list vectors. vector contains line’s point indices, 0-based (yes, know annoying, psychomorph developed Java existing template files index points starting 0). NB: Currently, ’m assuming lines start end point closed shapes, can’t make tear-drop shapes without doubling end coordinate. might change someday, also vector flagging whether shapes closed; currently always FALSE.","code":"# the first 6 points stimuli[[1]]$points[, 1:6] #>       [,1]     [,2]     [,3]     [,4]     [,5]     [,6] #> x 210.7407 288.1482 210.6481 204.6296 203.3333 205.2778 #> y 226.4815 226.3889 221.6667 223.3333 226.8519 231.4815 get_point(stimuli, 0:2) #>     image point        x        y #> 1 f_multi     0 210.7407 226.4815 #> 2 f_multi     1 288.1482 226.3889 #> 3 f_multi     2 210.6481 221.6667 #> 4 m_multi     0 211.1111 214.4444 #> 5 m_multi     1 286.4815 215.5556 #> 6 m_multi     2 210.9259 210.2778 # the first 6 lines stimuli[[1]]$lines[1:6] |> str() #> List of 6 #>  $ : int [1:2] 0 0 #>  $ : int [1:2] 1 1 #>  $ : int [1:9] 2 3 4 5 6 7 8 9 2 #>  $ : int [1:9] 10 11 12 13 14 15 16 17 10 #>  $ : int [1:5] 18 19 20 21 22 #>  $ : int [1:5] 23 24 25 26 27 stimuli[[1]]$closed #>  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #> [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"templates","dir":"Articles","previous_headings":"Delineations","what":"Templates","title":"Templates and Masking","text":"Delineations need follow template order work together. example, can’t average faces delineated different templates. Read images webmorph templates, automatically delineate images (details ). WebmorphR uses 5 main templates: FRL: 1889-point Face Research Lab template default manual template webmorph.org. template also used demo stimuli Chicago Face Database delineations. dlib7: 7-point internal automatic face detection. algorithm requires python installation, little harder set , doesn’t send images external company. actually 5-point template (corners eyes tip nose), added centre points corners eyes point 0 1 consistency templates. “pupil” points don’t always line pupils, ’re just calculated corners. dlib70: 70-point internal automatic face detection. files quite large, prompted download first time try use delineation. fpp106: 106-point Face++ template. high-quality detailed template, requires set API key Face++ transfer images Face++, make sure understand privacy consequences . fpp83: 83-point Face++ template. old template, keep consistency old auto-delineation template webmorph.org.  “smiling” demo dataset doesn’t FRL templates yet (soon), can demonstrate automatic delineation algorithms deal open mouths.","code":"s <- demo_stim(\"london\", \"030\") dlib7 <- auto_delin(s, \"dlib7\", replace = TRUE) dlib70 <- auto_delin(s, \"dlib70\", replace = TRUE) fpp106 <- auto_delin(s, \"fpp106\", replace = TRUE) fpp83 <- auto_delin(s, \"fpp83\", replace = TRUE) c(s, dlib7, dlib70, fpp106, fpp83) |>   setnames(c(\"frl\", \"dlib7\", \"dlib70\", \"fpp106\", \"fpp83\")) |>   draw_tem() |>   crop_tem(50) |>   pad(.15, 0, 0, 0) |>   gglabel(size = 20) |>   plot() smile <- demo_stim(\"smiling\", \"030\") dlib7s <- auto_delin(smile, \"dlib7\", replace = TRUE) dlib70s <- auto_delin(smile, \"dlib70\", replace = TRUE) fpp106s <- auto_delin(smile, \"fpp106\", replace = TRUE) fpp83s <- auto_delin(smile, \"fpp83\", replace = TRUE) c(dlib7s, dlib70s, fpp106s, fpp83s) |>   setnames(c(\"dlib7\", \"dlib70\", \"fpp106\", \"fpp83\")) |>   draw_tem() |>   crop_tem(50) |>   pad(.15, 0, 0, 0) |>   gglabel(size = 20) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"automatic-delineation","dir":"Articles","previous_headings":"Delineations","what":"Automatic Delineation","title":"Templates and Masking","text":"images aren’t delineated, can use auto_delin() function upload webmorph use extensive manual delineation functions 189-point FRL template. auto-delineation three options.","code":""},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"dlib","dir":"Articles","previous_headings":"Delineations > Automatic Delineation","what":"dlib","title":"Templates and Masking","text":"can use face recognition algorithms dlib delineate faces computer without transferring third-party service. files big (~100MB) ’s tricky include CRAN, can download github. ’ll training templates include package soon. also requires reticulate, python installation packages, can tricky. Many issues solved setting virtual environment webmorph, installing dlib, setting RETICULATE_PYTHON .Revniron using usethis::edit_r_environ(). default “dlib7”, 7-point template (tip nose, corners eyes, midpoints) works without access external services. uses Davis King’s shape_predictor_5_face_landmarks.dat. better (slower) option “dlib70”, 70-point template (68 plus 2 added centre eye points) Davis King’s shape_predictor_68_face_landmarks.dat.  can also use landmark file including argument model_path. Learn training landmark models search pre-trained models, 81-point model. (don’t think handles hairline well, working training model using stimuli typical face research.)  added lines pupil centres existing 5-point 68-point shape landmark files webmorphR; can add lines change_lines(). Yes, available landmark files use bonkers numbering system like . lines don’t much image processing, help visually assess accuracy delineation.","code":"remotes::install_github(\"debruine/webmorphR.dlib\") RETICULATE_PYTHON=\"~/.virtualenvs/webmorph/bin/python\" frl <- demo_stim(\"test\", \"m_multi\") |> crop(.8, .8) dlib7 <- auto_delin(frl, \"dlib7\", replace = TRUE) dlib70 <- auto_delin(frl, \"dlib70\", replace = TRUE) download.file(\"https://github.com/codeniko/shape_predictor_81_face_landmarks/raw/master/shape_predictor_81_face_landmarks.dat\", \"dlib81.dat\")  dlib_custom <- auto_delin(frl, replace = TRUE,                            model_path = \"dlib81.dat\")  dlib_custom |>    draw_tem(pt.shape = \"index\",             pt.size = 12) dlib_custom_lines <- dlib_custom |>   change_lines(line_id = \"face\", pts = c(0:16, 78, 74, 79, 73, 72, 80,                                           71, 70, 69, 68, 76, 75, 77, 0)) |>   change_lines(line_id = \"left_eyebrow\", pts = c(17:21)) |>   change_lines(line_id = \"right_eyebrow\", pts = c(22:26)) |>   change_lines(line_id = \"top_left_eye\", pts = c(36:39)) |>   change_lines(line_id = \"bottom_left_eye\", pts = c(39, 40, 41, 36)) |>   change_lines(line_id = \"top_right_eye\", pts = c(42:45)) |>   change_lines(line_id = \"bottom_right_eye\", pts = c(45, 46, 47, 42)) |>   change_lines(line_id = \"nose\", pts = c(27:30, 33)) |>   change_lines(line_id = \"under_nose\", pts = c(31:35)) |>   change_lines(line_id = \"outer_upper_lip\", pts = c(48:54)) |>   change_lines(line_id = \"outer_lower_lip\", pts = c(54:59, 48)) |>   change_lines(line_id = \"inner_upper_lip\", pts = c(60:64)) |>   change_lines(line_id = \"inner_lower_lip\", pts = c(64:67, 60))  dlib_custom_lines |>   draw_tem() |>    plot()"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"face","dir":"Articles","previous_headings":"Delineations > Automatic Delineation","what":"Face++","title":"Templates and Masking","text":"Auto-delineation web-based software Face++ better, requires free API key Face++. signing account, go https://console.faceplusplus.com/app/apikey/list request free API key. add key secret .Renviron file. function usethis::edit_r_environ() open .Renviron file (may need install usethis). Append following two lines , replacing “1234567890abcdefghijk” personal key secret. can save close file restart R load environment. Now can access 106-point (fpp106) 83-point (fpp83) templates. Remember, uploads images Face++ website.  83-point template confusing structure template first two points aren’t left right pupil, don’t recommend using , ’s available consistency old method used webmorh.org. Face++ auto-delineations can handle images one face. default, return delineation first face (’m entirely ure decide first), can set face argument another number images multiple faces.","code":"FACEPLUSPLUS_KEY=\"1234567890abcdefghijk\"   FACEPLUSPLUS_SECRET=\"1234567890abcdefghijk\" fpp83 <- auto_delin(frl, \"fpp83\", replace = TRUE) fpp106 <- auto_delin(frl, \"fpp106\", replace = TRUE) # combine two faces into one image with a border s <- demo_stim() |>    plot(padding = 0) |>    pad(20, fill = \"dodgerblue\")  # get delineations for the first and second face face1 <- fpp_auto_delin(s, \"fpp106\", TRUE, 1) face2 <- fpp_auto_delin(s, \"fpp106\", TRUE, 2)  # add template viz and plot c(face1, face2) |> draw_tem() |> plot(nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"visualise-delineations","dir":"Articles","previous_headings":"Delineations","what":"Visualise delineations","title":"Templates and Masking","text":"Use draw_tem() function show delineations. default, points translucent green circles lines translucent blue.  can change default colours translucency line.color pt.color line.alpha pt.alpha arguments. Change point shape pt.shape. Remove image set background color bg argument.","code":"stimuli |>   draw_tem() |>   plot() stimuli |>   draw_tem(line.color = \"grey\", line.size = 1, line.alpha = 0.2,             pt.color = \"red\", pt.size = 5, pt.alpha = 1,            pt.shape = \"cross\", bg = \"grey\") |>   crop_tem(20) |> # crop with 20px space around the largest tem   plot()"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"subset-template","dir":"Articles","previous_headings":"","what":"Subset template","title":"Templates and Masking","text":"can useful subset change delineation points lines analysis visualisation.","code":""},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"features","dir":"Articles","previous_headings":"Subset template","what":"Features","title":"Templates and Masking","text":"features() function returns points make different subsets FRL template (default manual template webmorph.org) dlib70 template.","code":"features(\"left_eye\", \"right_eye\") #>  [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #> [26] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"subset-template-1","dir":"Articles","previous_headings":"Subset template","what":"Subset template","title":"Templates and Masking","text":"“gmm” features eyebrows, eyes, nose, mouth points, plus face oval. common subset use geometric morphometric analyses. Use subset_tem() function select just delineation points. line definitions automatically updated lines longer points deleted.  Make sure add tem_id faces templates, 70-point auto-delineation “dlib70”. can also add points manually.","code":"stimuli |>   crop_tem() |>   subset_tem(features(\"gmm\")) |>   draw_tem(pt.size = 5) |>   plot() # add 70-point delineation stimuli_newdelin <- stimuli |>   crop_tem() |>   auto_delin(\"dlib70\", replace = TRUE)  keep_pts <- c(0, 1, features(\"face\", tem_id = \"dlib70\"))  stimuli_newdelin |>   subset_tem(keep_pts) |>   draw_tem(pt.size = 5) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"change-lines","dir":"Articles","previous_headings":"Subset template","what":"Change lines","title":"Templates and Masking","text":"alter number points, remaining lines don’t always make sense.  Notice extra lines ears; ’re lines went around outside ears, weren’t automatically deleted two points connect head still .  Figure relevant line numbers template. , lines connecting points 0 2, connecting points 3 5, lines 3 4.  Alternatively, can delete lines start .  numbering odd historical reasons. 189-point Face Research Lab (FRL) template derived earlier 179-point template Perception Lab St Andrews. extra points around ears, nose, neck added , ’re order. thousands faces delineated template, ’s late change.","code":"s <- stimuli |> subset_tem(features(\"face\"))  s |>   draw_tem(line.color = \"hotpink\", line.alpha = 1) |>    crop_tem(50) |>   plot() s[[1]] |>   draw_tem(pt.shape = \"index\", pt.size = 10,            line.color = \"hotpink\", line.alpha = 1) |>    crop_tem(50) |>   plot() s[[1]]$lines |> str() #> List of 8 #>  $ : num [1:5] 0 26 1 27 2 #>  $ : num [1:5] 3 28 4 29 5 #>  $ : num [1:2] 0 2 #>  $ : num [1:2] 3 5 #>  $ : num [1:13] 0 15 16 17 18 19 20 21 22 23 ... #>  $ : num [1:3] 2 6 7 #>  $ : num [1:7] 7 8 9 10 11 12 13 #>  $ : num [1:3] 13 14 5 s1 <- s |>   change_lines(line_id = 3:4, pts = NULL)  s1[[1]] |>   draw_tem(pt.shape = \"index\", pt.size = 10,            line.color = \"hotpink\", line.alpha = 1) |>    crop_tem(50) |>   plot() # remove all lines s2 <- s |>   change_lines(line_id = 1:8, pts = NULL) s2[[1]]$lines #> list()  s2[[1]] |>   draw_tem(pt.shape = \"index\", pt.size = 10) |>    crop_tem(50) |>   plot() face_oval <- c(0, 26, 1, 27, 2, 6:14, 5, 29, 4, 28, 3, 25:15, 0)  s3 <- s2 |>   change_lines(line_id = 1, pts = face_oval)  s3[[1]] |>   draw_tem(line.color = \"hotpink\", line.alpha = 1) |>   crop_tem(50) |>   plot()"},{"path":[]},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"masking-with-templates","dir":"Articles","previous_headings":"Masking","what":"Masking with Templates","title":"Templates and Masking","text":"images delineated FRL template (default example stimuli webmorph), can use built-masking features. default mask crops around face white background.  can set mask combination following: oval, face, neck, ears (left_ear, right_ear), eyes (left_eye, right_eye), brows (left_brow, right_brow), mouth, teeth, nose.  can reverse mask. can also use alpha transparency fill colour.","code":"# load your stimuli with templates stimuli <- demo_stim(\"composite\", pattern = \"multi\") mask(stimuli) |> plot() mask(stimuli, mask = c(\"face\", \"neck\", \"ears\"), fill = \"dodgerblue\") |>   plot() mask(stimuli, mask = c(\"eyes\", \"mouth\"),       fill = \"#00000099\", reverse = TRUE) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"oval-mask","dir":"Articles","previous_headings":"Masking","what":"Oval Mask","title":"Templates and Masking","text":"hate “standard oval mask”, mainly used easy, rather good idea face perception. really want replicate stimuli 80s…  default, oval mask calculates maximum minimum x y coordinates template masks face according . Set = FALSE calculate across images apply oval .","code":"stimuli |>   greyscale() |>   mask_oval() |>   plot() stimuli |>   greyscale() |>   # remove template points to make the oval tighter around the face   subset_tem(features(\"face\")) |>   mask_oval(fill = \"black\", each = FALSE) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"subset-templates","dir":"Articles","previous_headings":"Masking","what":"Subset templates","title":"Templates and Masking","text":"can subset template points images delineated FRL template using convenience function features().  available named features. feature “gmm” subset points commonly used geometric morphometrics, excludes points don’t clear anatomical definitions.","code":"full_tem <- demo_stim()[1] pts_to_keep <- features(\"eyes\", \"nose\", \"mouth\", \"brows\") pts_to_delete <- features(\"cheekbones\", \"undereyes\", \"smile_lines\")  internal_features <- subset_tem(full_tem, pts_to_keep) no_lines <- subset_tem(full_tem, pts_to_delete, keep = FALSE)  c(full_tem, internal_features, no_lines) |>    draw_tem() |>    crop_tem() |>   plot() features <- c(\"gmm\", \"oval\", \"face\", \"mouth\", \"nose\", \"eyes\", \"brows\",               \"left_eye\",  \"right_eye\", \"left_brow\",  \"right_brow\",               \"ears\", \"undereyes\", \"teeth\", \"smile_lines\",                \"cheekbones\", \"philtrum\", \"chin\", \"neck\", \"halo\")  # crop stimuli to make them easier to see crops <-  crop_tem(full_tem)  # plot each feature subset new_tems <- lapply(features, function(ft) {   crops |>      subset_tem(features(ft)) |>      draw_tem(pt.color = \"#FF0099\",              pt.size = 8,              line.color = \"#FFFF00\",              line.size = 5,              line.alpha = 1) }) |> do.call(c, args = _)  new_tems |>    pad(50, 0, 0, 0, fill = \"white\") |>   setnames(features) |>    label() |>    plot()"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"stimulus-set","dir":"Articles","previous_headings":"","what":"Stimulus set","title":"Templates and Masking","text":"Now ’s relatively straightforward create stimulus set matches old papers.  Although still think delineated masking better :)","code":"demo_stim(\"london\")[1:10] |>   greyscale() |>   align() |>   # remove template points to make the oval tighter around the face   subset_tem(features(\"face\")) |>   mask_oval(fill = \"grey\") |>   crop_tem(50) |> #  crop to template boundary and add 50px on each side    plot(nrow = 2) demo_stim(\"london\")[1:10] |>   resize(0.5) |> # resize to process faster   mask(fill = \"grey\") |>   # remove external features before procrustes alignment   subset_tem(features(\"gmm\")) |>   align(procrustes = TRUE) |>   # crop to template boundary and add 50px on each side    crop_tem(50) |>    plot(nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/masking.html","id":"custom-masks","dir":"Articles","previous_headings":"","what":"Custom Masks","title":"Templates and Masking","text":"can define custom mask. code useful finding template points want outline. crops around points, makes image darker, makes larger (text higher-resolution), plots point indices.  Let’s say wanted mask right side face left eye. set mask list named areas, area list vectors points along segment enclosing mask.  script took 1.2 minutes render included images scratch.","code":"stimuli <- demo_stim(\"smiling\", pattern = \"030\") |>   auto_delin(\"dlib70\", replace = TRUE)  stimuli |>    crop_tem() |>    resize(2) |>   draw_tem(pt.size = 35, pt.shape = \"circle\", pt.alpha = 1, pt.color = \"white\") |>   draw_tem(pt.size = 20, pt.shape = \"index\", pt.alpha = 1, pt.color = \"black\",            line.alpha = 0) |>   plot() mask <- list(   right_face = list(     10:18, #chin to right temple     c(18, 28:24, 29), # right temple to between eyes     c(29:32, 35, 53, 64, 68, 59, 10) # midline points   ),   left_eye = list(     38:41, # top lid     c(41:43, 38) # bottom lid   ) )  mask(stimuli, mask, fill = \"hotpink\", reverse = TRUE) |>   crop(.6, .6) |>   plot()"},{"path":"https://facelab.github.io/webmorph/articles/similarity.html","id":"create-images-to-compare","dir":"Articles","previous_headings":"","what":"Create images to compare","title":"Image Similarity","text":"","code":"stimuli <- demo_stim() s <- continuum(stimuli[1], stimuli[2]) |>   mask(\"face\") |>   subset_tem(features(\"face\")) |>   crop_tem()  plot(s, nrow = 1)"},{"path":"https://facelab.github.io/webmorph/articles/similarity.html","id":"calculate-metrics","dir":"Articles","previous_headings":"","what":"Calculate metrics","title":"Image Similarity","text":"Using available metrics, calculate similarity image first image.  PSNR Inf test reference image identical, highest non-infinite value scales 1.0.","code":"mtypes <- magick::metric_types() names(mtypes) <- mtypes m <- lapply(mtypes, image_comp,              stim = s,              ref_stim = s[[1]],              fuzz = 0,              scale = TRUE) # results scaled from 0 to 1"},{"path":"https://facelab.github.io/webmorph/articles/similarity.html","id":"check-fuzz-settings","dir":"Articles","previous_headings":"","what":"Check fuzz settings","title":"Image Similarity","text":"Fuzz something AE.","code":"m2 <- lapply(mtypes, image_comp,               stim = s,               ref_stim = s[[1]],               fuzz = 50,              scale = TRUE) fuzzes <- seq(0, 20, 1) names(fuzzes) <- fuzzes m3 <- lapply(fuzzes, image_comp,               stim = s,               ref_stim = s[[1]],               metric = \"AE\",              scale = FALSE) # don't scale for this comparison"},{"path":"https://facelab.github.io/webmorph/articles/similarity.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Image Similarity","text":"strong negative exponential decay 0 fuzz; linear higher fuzz: AE strong negative exponential decay: PAE slight negative exponential decay: Fuzz, RMSE linear: MAE, MEPP, MSE idea: PHASH linear: NCC, Undefined slight exponential decay: PSNR","code":""},{"path":[]},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"load-demo-images","dir":"Articles","previous_headings":"Averageness","what":"Load demo images","title":"Making Stimuli","text":"Let’s start set images demo image sets. need webmorphR.stim package installed haven’t done already.","code":"remotes::install_github(\"debruine/webmorphR.stim\")"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"add-info","dir":"Articles","previous_headings":"Averageness","what":"Add info","title":"Making Stimuli","text":"can add data image set use subsetting images. demonstration, “london” image set data table called london_info. Use add_info() add data. data table isn’t order stimuli, can match stimulus item names data column using ..","code":"head(webmorphR.stim::london_info) #> # A tibble: 6 × 4 #>   face_id face_age face_gender face_eth   #>   <chr>      <int> <chr>       <chr>      #> 1 001           24 female      white      #> 2 002           24 female      white      #> 3 003           38 female      white      #> 4 004           30 male        white      #> 5 005           28 male        east_asian #> 6 006           31 female      west_asian stimuli <- demo_stim(\"london\") |>   add_info(webmorphR.stim::london_info)"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"subset","dir":"Articles","previous_headings":"Averageness","what":"Subset","title":"Making Stimuli","text":"Select images stimuli make new image subset. original images large, don’t need resulting stimuli large, ’ll reduce image size 50% right start reduce processing time.","code":"subset <- stimuli |>   subset(face_eth == \"black\") |>   subset(face_gender == \"male\") |>   resize(.5)  plot(subset, nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"align","dir":"Articles","previous_headings":"Averageness","what":"Align","title":"Making Stimuli","text":"Next, align images using Procrustes normalisation position first image. need templates fitted . argument patch = TRUE tries match background colour closely possible. horiz_eyes function just makes sure first image good alignment, since head slightly tilted.  Note: get error message rgl dynlib, using Mac, may need install XQuartz.","code":"aligned <- subset |>   horiz_eyes(patch = TRUE) |>   align(procrustes = TRUE, patch = TRUE)  plot(aligned, nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"crop","dir":"Articles","previous_headings":"Averageness","what":"Crop","title":"Making Stimuli","text":"may also want crop images 3x4 aspect ratio setting width 60% image height 80%. default, crop() center cropping, can also manually set x y offsets. Values less 2.0 interpreted percentages, values greater 2.0 interpreted pixels.","code":"cropped <- crop(aligned, width = 0.6, height = 0.8, y_off = .05)  plot(cropped, nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"average","dir":"Articles","previous_headings":"Averageness","what":"Average","title":"Making Stimuli","text":"Now can make average version faces. uses morphing functions available web app, need internet connection. usually takes 1-4 seconds per image upload images server processing.","code":"avg <- avg(cropped)  # show average with and without template draw_tem(avg) |> c(avg) |> plot()"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"transform","dir":"Articles","previous_headings":"Averageness","what":"Transform","title":"Making Stimuli","text":"can use average face transform individual faces distinctiveness averageness. Give shape vector names set output names automatically. Use subset() plot row.","code":"transf <- trans(trans_img = cropped,                 from_img = avg,                 to_img = cropped,                 shape = c(avg = -0.5, dist = 0.5)) plot_rows(   \"More Average\" = subset(transf, \"avg\"),   \"Original\" = cropped,   \"More Distinctive\" = subset(transf, \"dist\"),   top_label = TRUE )"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"save-stimuli","dir":"Articles","previous_headings":"Averageness","what":"Save stimuli","title":"Making Stimuli","text":"Now can set names save individual stimuli directory use studies. code create directory called “stimuli” working directory isn’t one already. can write format magick::image_write() handles, “png”, “jpeg”, “gif” (default “png”). Use setnames() search replace patterns, add prefixes suffixes, replace names new vector names. London images stimsets package “_03” appended designate neutral front version larger set, also includes smiling images several different viewpoints.","code":"avg |> write_stim(dir = \"stimuli\",                     names = \"m_avg\",                     format = \"jpg\") cropped |>   setnames(pattern = \"_03\",             replacement = \"\",             prefix = \"orig_\") |>   write_stim(dir = \"stimuli\", format = \"jpg\")  transf |>   setnames(pattern = \"_03\", replacement = \"\") |>   write_stim(dir = \"stimuli\", format = \"jpg\")"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"repeat","dir":"Articles","previous_headings":"Averageness","what":"Repeat","title":"Making Stimuli","text":"Now can pipe commands together apply new set images, black women set.","code":"# subset, resize, align, and crop cropped <- stimuli |>   subset(face_gender == \"female\") |>   subset(face_eth == \"black\") |>   resize(.5) |>   horiz_eyes(patch = TRUE) |>   align(procrustes = TRUE, patch = TRUE) |>   crop(width = 0.6, height = 0.8, y_off = 0.05)  # average avg <- avg(cropped)  # transform transf <- trans(trans_img = cropped,                 from_img = avg,                 to_img = cropped,                 shape = c(avg = -0.5, dist = 0.5))  # save avg |> write_stim(\"stimuli\", \"f_avg\", \"jpg\")  cropped |>   setnames(pattern = \"_03\",             replacement = \"\",             prefix = \"orig_\") |>   write_stim(\"stimuli\", format = \"jpg\")  transf |>   setnames(pattern = \"_03\", replacement = \"\") |>   write_stim(\"stimuli\", format = \"jpg\") plot_rows(   \"More Average\" = subset(transf, \"avg\"),   \"Original\" = cropped,   \"More Distinctive\" = subset(transf, \"dist\"),   top_label = TRUE )"},{"path":[]},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"read-in-images","dir":"Articles","previous_headings":"Sexual Dimorphism","what":"Read in images","title":"Making Stimuli","text":"manipulate sexual dimorphism, need male female average faces like ones created . Load saved files “stimuli” directory.","code":"avgs <- read_stim(path = \"stimuli\", pattern = \"(f|m)_avg\") orig <- read_stim(path = \"stimuli\", pattern = \"orig_\")"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"transform-1","dir":"Articles","previous_headings":"Sexual Dimorphism","what":"Transform","title":"Making Stimuli","text":"can transform -50% feminise +50% masculinise. Remember give shape vector names set output names automatically.","code":"sexdim <- trans(trans_img = orig[1:6],                 from_img = avgs$f_avg,                 to_img = avgs$m_avg,                 shape = c(fem = -0.5, masc = 0.5))  plot(sexdim, nrow = 2)"},{"path":[]},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"make-a-continuum","dir":"Articles","previous_headings":"Animate","what":"Make a continuum","title":"Making Stimuli","text":"Make continuum morphs female male average 5% steps. makes 21 images, take seconds; patient.","code":"continuum <- continuum(avgs$f_avg, avgs$m_avg, 0, 1, .05)  plot(continuum, nrow = 3)"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"animate-1","dir":"Articles","previous_headings":"Animate","what":"Animate","title":"Making Stimuli","text":"can turn images animated gif. Resize images size want first. Save resulting image gif. gifski package installed, used create animated gif faster magick algorithm (don’t load gifski used, just install ).  run code, even R Markdown document, gif show Viewer pane, display document knit.","code":"#install.packages(\"gifski\") # for faster animation  continuum |>   resize(width = 180) |>   animate(fps = 20, rev = TRUE)"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"non-face-stimuli","dir":"Articles","previous_headings":"","what":"Non-Face Stimuli","title":"Making Stimuli","text":"can also process images without templates. example, following code takes group images crops standard size.","code":"# load rainbow images stimuli <- demo_stim(\"rainbow\")  # get info on the images to put in order by type and colour info <- system.file(\"rainbow/_info.csv\", package = \"webmorphR.stim\") |>   readr::read_csv() |>   dplyr::mutate(colour = factor(colour, c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"))) |>   dplyr::arrange(type, colour)  # crop to smallest size width <- width(stimuli, \"min\") height <- height(stimuli, \"min\") stim <- crop(stimuli, width, height) stim <- stim[info$photo_name] # reorder by type and colour  plot(stim, ncol = 6)"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"blank-stimuli","dir":"Articles","previous_headings":"","what":"Blank stimuli","title":"Making Stimuli","text":"can make blank images specifying size colour.","code":"new_stimuli <- blank(n = 6, width = 100, height = 100,                       color = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"))  plot(new_stimuli, nrow = 1)"},{"path":"https://facelab.github.io/webmorph/articles/stimuli.html","id":"word-stimuli","dir":"Articles","previous_headings":"","what":"Word Stimuli","title":"Making Stimuli","text":"Create word stimuli starting blank images adding words stimulus label() function.  script took 0.8 minutes render included images scratch.","code":"# make a vector of the words and colours they should print in colours <- c(red = \"red3\",               orange = \"darkorange\",               green = \"darkgreen\",               blue = \"dodgerblue3\",               purple = \"darkorchid\")  # make vector of labels (each word in each colour) n <- length(colours) labels <- rep(names(colours), each = n)  # make 36 blank 800x200px images and add labels stroop <- blank(n*n, 800, 200) |>   label(labels,          size = 100,          color = colours,          weight = 700,         gravity = \"center\")  plot(stroop, ncol = n, fill = \"grey\")"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started","text":"can install development version GitHub : Installation can take minutes, depending many dependency packages need install.","code":"# install.packages(\"remotes\") remotes::install_github(\"debruine/webmorphR\") library(webmorphR) #>  #> ************ #> Welcome to webmorphR. For support and examples visit: #> https://debruine.github.io/webmorphR/ #> ************  wm_opts(plot.maxwidth = 850) # set maximum width for plot output"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"averaging-faces","dir":"Articles","previous_headings":"","what":"Averaging Faces","title":"Getting Started","text":"example, ’ll load faces CC-licensed Face Research Lab London Set, average together, create figure.","code":""},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"load-demo-stimuli","dir":"Articles","previous_headings":"Averaging Faces","what":"Load demo stimuli","title":"Getting Started","text":"Load 6 faces. haven’t already downloaded demo stimulus sets, code prompt download . demo sets large, can take minute .","code":"# remotes::install_github(\"debruine/webmorphR.stim\") face_set <- demo_stim(\"london\", \"002|006|007|025|030|066\")  plot(face_set, nrow = 1)"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"average-faces","dir":"Articles","previous_headings":"Averaging Faces","what":"Average faces","title":"Getting Started","text":"faces already webmorph templates, can make average. avg() function sends images templates server webmorph.org, processing sends back average, can take seconds. also means need internet connection step. Note: WebMorph created difficulty installing desktop PsychoMorph many computers, package uses web-based API averaging transforming. images deleted server immediately processing.","code":"avg <- avg(face_set)  plot(avg)"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"display-figure","dir":"Articles","previous_headings":"Averaging Faces","what":"Display figure","title":"Getting Started","text":"Create figure showing individual faces average template superimposed. See plot_stim() explanation arguments plot() function (alias plot_stim).","code":"# plot individual faces in a grid the same height as the average face ind <- plot(face_set,              ncol = 2,              padding = 30,              external_pad = FALSE,             maxwidth = avg$avg$width,              maxheight = avg$avg$height)  # draw template on the face, join with individual grid, and plot tem <- draw_tem(avg, pt.alpha = 0.5, line.alpha = 0.25)  # combine the ind and tem stimuli and plot c(ind, tem) |> plot(nrow = 1)"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"transforming-faces","dir":"Articles","previous_headings":"","what":"Transforming Faces","title":"Getting Started","text":"example, ’ll transform individual images, mask crop , put together single compound figure.","code":""},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"transform","dir":"Articles","previous_headings":"Transforming Faces","what":"Transform","title":"Getting Started","text":"First, transform images make average. Transforming manipulates shape, color, /texture trans_img specified proportion different from_img to_img. example, individual face face_set transformed shape either -50% difference face average face, making distinctive exaggerating non-average features, +50%, making average. Set names shape, color texture argument vector automatically name output stimuli. trans() function also sends images webmorph.org, can take minute requires internet connection.","code":"dist_avg <- trans(trans_img = face_set,                    from_img = face_set,                    to_img = avg,                   shape = c(distinctive = -0.5, average = 0.5),                   color = 0, texture = 0)  plot(dist_avg, nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"mask-and-crop","dir":"Articles","previous_headings":"Transforming Faces","what":"Mask and crop","title":"Getting Started","text":"Next, mask images rainbow colours crop . Making distinctive exaggerated differences position image, align eyes average position first.","code":"rainbow <- c(\"#983E82\", \"#E2A458\", \"#F5DC70\",               \"#59935B\", \"#467AAC\", \"#61589C\")  stimuli <- dist_avg |>   align() |>   mask(c(\"face\", \"neck\", \"ears\"), fill = rainbow) |>   crop(0.6, 0.8)  plot(stimuli, nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"save-images","dir":"Articles","previous_headings":"Transforming Faces","what":"Save images","title":"Getting Started","text":"Save stimuli new directory. create folder working directory called “mystimuli” doesn’t exist.","code":"write_stim(stimuli, dir = \"mystimuli\")"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"display-figure-1","dir":"Articles","previous_headings":"Transforming Faces","what":"Display figure","title":"Getting Started","text":"Easily create figures illustrate research. code subsets stimuli reorder average faces first, edits stimulus names search replace part name, adds 120 pixels black padding top image, labels name, plots images two rows.","code":"c(subset(stimuli, \"average\"),   subset(stimuli, \"distinctive\")) |>   setnames(pattern = \"_03_\", replacement = \" \") |>   pad(120, 0, 0, 0, fill = \"black\") |>   label(size = 90,          color = rainbow,          weight = 700,         gravity = \"north\",         location = \"+0+10\") |>   plot(nrow = 2)"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"automatic-delineation","dir":"Articles","previous_headings":"","what":"Automatic Delineation","title":"Getting Started","text":"Read images webmorph templates, automatically delineate images python module face_recognition web-based software Face++. Auto-delineation Face++ detailed, requires free API key Face++. Auto-delineation python doesn’t transfer images third party, requires webmorphR.dlib package python setup using reticulate.","code":""},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"resize-and-auto-delineate","dir":"Articles","previous_headings":"Automatic Delineation","what":"Resize and auto-delineate","title":"Getting Started","text":"Auto-delineation takes seconds per face, see progress bar console. may also see startup output reticulate first time use function session.  Alternatively, can use Face++ auto-delineator setting model = \"fpp106\". requires set Face++ account set environment variables (see Making Stimuli vignette). transfers images Face++, make sure read privacy information.","code":"stimuli <- demo_stim(\"zoom\") |>    resize(1/2) |>   auto_delin(replace = TRUE)  draw_tem(stimuli, pt.size = 10) |> plot() stimuli <- demo_stim(\"zoom\") |>    resize(1/2) |>   auto_delin(model = \"fpp106\", replace = TRUE)  draw_tem(stimuli, pt.size = 8) |> plot()"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"align-and-crop","dir":"Articles","previous_headings":"Automatic Delineation","what":"Align and crop","title":"Getting Started","text":"Now can procrustes* align images crop dimensions.  Note: get error message rgl dynlib using align() procrustes = TRUE, using Mac, may need install XQuartz. can omit procrustes argument default 2-point alignment, rotates resizes images pupils position (average set, unless manually specify positions).","code":"aligned <- stimuli |>   align(procrustes = TRUE, patch = TRUE) |>   crop_tem(120, 20, 20, 20)  plot(aligned)"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"pad-and-label","dir":"Articles","previous_headings":"Automatic Delineation","what":"Pad and Label","title":"Getting Started","text":"Add 50 pixels image labels.","code":"labelled <- aligned |>   pad(50, 0, 0, 0, fill = \"black\") |>   label(c(\"15cm\", \"30cm\", \"45cm\", \"60cm\"),          color = \"white\",         size = 40,         weight = 700,         location = \"+0+5\")    plot(labelled)"},{"path":"https://facelab.github.io/webmorph/articles/webmorphR.html","id":"animate","dir":"Articles","previous_headings":"Automatic Delineation","what":"Animate","title":"Getting Started","text":"Turn images animated gif. Make sure gifski package installed (doesn’t need loaded) take advantage faster gif-making algorithms.","code":"animate(labelled, fps = 2)"},{"path":"https://facelab.github.io/webmorph/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lisa DeBruine. Author, maintainer. Emily Cunningham. Proofreader, contributor.","code":""},{"path":"https://facelab.github.io/webmorph/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lisa DeBruine, (2022). webmorphR: Reproducible Stimuli R package version 0.0.2.9001. Zenodo. http://doi.org/10.5281/zenodo.???????","code":"@Manual{,   title = {webmorphR: Reproducible Stimuli},   author = {Lisa M. DeBruine},   doi = {10.5281/zenodo.???????},   publisher = {Zenodo},   year = {2022},   note = {R package version 0.0.2.9001},   url = {https://debruine.github.io/webmorphR/}, }"},{"path":"https://facelab.github.io/webmorph/index.html","id":"webmorphr-","dir":"","previous_headings":"","what":"Reproducible Stimuli","title":"Reproducible Stimuli","text":"goal webmorphR make construction image stimuli reproducible, focus face stimuli. development package funded ERC grant #647910 (KINSHIP).","code":""},{"path":"https://facelab.github.io/webmorph/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Reproducible Stimuli","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"debruine/webmorphR\")"},{"path":"https://facelab.github.io/webmorph/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Reproducible Stimuli","text":"code produces following figure reproducibly, can applied set starting images.  Load images psychomorph/webmorph templates automatically delineate . Use functions like resize(), align() crop() process images reproducibly. Use webmorph functions create composite transformed faces. Use plotting labelling functions create figures.","code":"library(webmorphR)  # load 6 images from the smiling demo set original <- demo_stim(dir = \"smiling\",                       pattern = \"002|013|030|064|094|099\")  # resize and delineate the images (using Face++) # procrustes align and crop them to 80% size processed <- original |>   resize(0.5) |>   auto_delin(smiling, model = \"fpp106\") |>   align(procrustes = TRUE) |>   crop(width = 0.8, height = 0.8, y_off = 0)  # rename and save individual images processed |>   setnames(prefix = \"aligned_\") |>   write_stim(dir = \"stimuli/smiling\")  # average faces (using webmorph.org) avg <- avg(processed)  # combine individual faces in a grid the same height as the average face grid <- plot(processed,               ncol = 2,               external_pad = FALSE,              maxheight = height(avg))  # draw template on the average face and add a label tem_viz <- avg |>   draw_tem() |>   label(text = \"Composite with Template\",         size = 30, location = \"+0+10\")  # combine the grid and tem_viz images and plot c(grid, tem_viz) |>    plot(nrow = 1, maxwidth = 1500)"},{"path":"https://facelab.github.io/webmorph/index.html","id":"helper-packages","dir":"","previous_headings":"","what":"Helper packages","title":"Reproducible Stimuli","text":"also two helper packages contain large demo stimulus files functions require python dlib.","code":"devtools::install_github(\"debruine/webmorphR.stim\") devtools::install_github(\"debruine/webmorphR.dlib\")"},{"path":"https://facelab.github.io/webmorph/reference/OR.html","id":null,"dir":"Reference","previous_headings":"","what":"Piped OR — OR","title":"Piped OR — OR","text":"LHS NULL, otherwise RHS","code":""},{"path":"https://facelab.github.io/webmorph/reference/OR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Piped OR — OR","text":"","code":"l %||% r"},{"path":"https://facelab.github.io/webmorph/reference/OR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Piped OR — OR","text":"l LHS. r RHS.","code":""},{"path":"https://facelab.github.io/webmorph/reference/OR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Piped OR — OR","text":"LHS NULL, otherwise RHS.","code":""},{"path":"https://facelab.github.io/webmorph/reference/add_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Information — add_info","title":"Add Information — add_info","text":"Add info data table contains info either order stimulus list, matching stimuli item name column specified ..","code":""},{"path":"https://facelab.github.io/webmorph/reference/add_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Information — add_info","text":"","code":"add_info(stimuli, ..., .by = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/add_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Information — add_info","text":"stimuli list class stimlist ... data table named vectors info add .column use match info stimuli names; leave NULL data matched order","code":""},{"path":"https://facelab.github.io/webmorph/reference/add_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Information — add_info","text":"stimlist info added","code":""},{"path":"https://facelab.github.io/webmorph/reference/add_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Information — add_info","text":"can also add data named vectors.","code":""},{"path":"https://facelab.github.io/webmorph/reference/add_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Information — add_info","text":"","code":"stimuli <- demo_stim() |>   add_info(project = \"XXX\", gender = c(\"F\", \"M\"))  stimuli$f_multi$info |> str() #> List of 2 #>  $ project: chr \"XXX\" #>  $ gender : chr \"F\""},{"path":"https://facelab.github.io/webmorph/reference/align.html","id":null,"dir":"Reference","previous_headings":"","what":"Align templates and images — align","title":"Align templates and images — align","text":"Align templates images","code":""},{"path":"https://facelab.github.io/webmorph/reference/align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align templates and images — align","text":"","code":"align(   stimuli,   pt1 = 0,   pt2 = 1,   x1 = NULL,   y1 = NULL,   x2 = NULL,   y2 = NULL,   width = NULL,   height = NULL,   ref_img = NULL,   fill = wm_opts(\"fill\"),   patch = FALSE,   procrustes = FALSE )"},{"path":"https://facelab.github.io/webmorph/reference/align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align templates and images — align","text":"stimuli list class stimlist pt1 first point align (defaults 0) pt2 second point align (defaults 1) x1 x-coordinate align first point y1 y-coordinate align first point x2 x-coordinate align second point y2 y-coordinate align second point width width aligned image height height aligned image ref_img reference image (index name) get coordinates dimensions NULL (defaults average images NULL) fill background color cropping goes outside original image patch whether use patch function set background color procrustes Whether procrustes alignment","code":""},{"path":"https://facelab.github.io/webmorph/reference/align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align templates and images — align","text":"stimlist aligned tems /images","code":""},{"path":"https://facelab.github.io/webmorph/reference/align.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align templates and images — align","text":"","code":"# load stimuli and crop/rotate differently stimuli <- demo_stim() |>    crop(c(0.8, 0.9), c(1.0, 0.9), x_off = c(0, 0.2)) |>   rotate(c(-5, + 5))  # align to bottom-centre of nose (average position) one_pt <- align(stimuli, pt1 = 55, pt2 = 55)  # align to pupils of second image two_pt <- align(stimuli, ref_img = 2)  # procrustes align to average position proc <- align(stimuli, procrustes = TRUE)"},{"path":"https://facelab.github.io/webmorph/reference/angle_from_2pts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get angle from 2 points — angle_from_2pts","title":"Get angle from 2 points — angle_from_2pts","text":"Get angle 2 points","code":""},{"path":"https://facelab.github.io/webmorph/reference/angle_from_2pts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get angle from 2 points — angle_from_2pts","text":"","code":"angle_from_2pts(coords, pt1 = 1, pt2 = 2)"},{"path":"https://facelab.github.io/webmorph/reference/angle_from_2pts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get angle from 2 points — angle_from_2pts","text":"coords coordinate array pt1 first point pt2 second point","code":""},{"path":"https://facelab.github.io/webmorph/reference/angle_from_2pts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get angle from 2 points — angle_from_2pts","text":"double angle radians","code":""},{"path":"https://facelab.github.io/webmorph/reference/animate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an animated gif from a list of stimuli — animate","title":"Create an animated gif from a list of stimuli — animate","text":"Create animated gif list stimuli","code":""},{"path":"https://facelab.github.io/webmorph/reference/animate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an animated gif from a list of stimuli — animate","text":"","code":"animate(stimuli, fps = 1, loop = 0, rev = FALSE)"},{"path":"https://facelab.github.io/webmorph/reference/animate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an animated gif from a list of stimuli — animate","text":"stimuli list class stimlist fps frames per second loop many times loop animation (0 = infinite) rev whether loop back forth (TRUE) one direction (FALSE)","code":""},{"path":"https://facelab.github.io/webmorph/reference/animate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an animated gif from a list of stimuli — animate","text":"magick image","code":""},{"path":"https://facelab.github.io/webmorph/reference/animate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an animated gif from a list of stimuli — animate","text":"","code":"gif <- demo_stim() |> animate()"},{"path":"https://facelab.github.io/webmorph/reference/auto_delin.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-Delineation — auto_delin","title":"Auto-Delineation — auto_delin","text":"Automatically delineate faces using dlib python Face++ (external service). Wrapper function fpp_auto_delin() webmorphR.dlib::dlib_auto_delin().","code":""},{"path":"https://facelab.github.io/webmorph/reference/auto_delin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-Delineation — auto_delin","text":"","code":"auto_delin(   stimuli,   model = c(\"dlib7\", \"dlib70\", \"fpp106\", \"fpp83\"),   replace = FALSE,   face = 1,   model_path = NULL )"},{"path":"https://facelab.github.io/webmorph/reference/auto_delin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-Delineation — auto_delin","text":"stimuli list class stimlist model shape predictor model use (dlib7, dlib70, fpp106, fpp83) replace FALSE, gets templates images template face face delineate image 1 (Face++) model_path path custom dlib .dat landmark file use (model ignored set)","code":""},{"path":"https://facelab.github.io/webmorph/reference/auto_delin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-Delineation — auto_delin","text":"stimlist templates","code":""},{"path":[]},{"path":"https://facelab.github.io/webmorph/reference/auto_delin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auto-Delineation — auto_delin","text":"","code":"if (FALSE) { # requires an API key in .Renviron   auto_fpp106 <- demo_stim() |>     auto_delin(model = \"fpp106\", replace = TRUE)        # requires debruine/webmorphR.dlib   auto_dlib7 <- demo_stim() |>     auto_delin(replace = TRUE)      auto_dlib70 <- demo_stim() |>     auto_delin(model = \"dlib70\", replace = TRUE) }"},{"path":"https://facelab.github.io/webmorph/reference/average_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"Average templates — average_tem","title":"Average templates — average_tem","text":"function just averages templates. average image returned, just images superimposed. create template-aware average, see avg.","code":""},{"path":"https://facelab.github.io/webmorph/reference/average_tem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average templates — average_tem","text":"","code":"average_tem(stimuli, name = \"average\")"},{"path":"https://facelab.github.io/webmorph/reference/average_tem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average templates — average_tem","text":"stimuli list class stimlist name Name average","code":""},{"path":"https://facelab.github.io/webmorph/reference/average_tem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average templates — average_tem","text":"list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/average_tem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average templates — average_tem","text":"","code":"demo_stim() |> average_tem() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e954afea47.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/avg.html","id":null,"dir":"Reference","previous_headings":"","what":"Average Images — avg","title":"Average Images — avg","text":"Average Images","code":""},{"path":"https://facelab.github.io/webmorph/reference/avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average Images — avg","text":"","code":"avg(   stimuli,   texture = TRUE,   norm = c(\"none\", \"twopoint\", \"rigid\"),   normpoint = 0:1 )"},{"path":"https://facelab.github.io/webmorph/reference/avg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average Images — avg","text":"stimuli images average (list class stimlist) texture logical, textured average norm normalise normpoint points twopoint normalisation","code":""},{"path":"https://facelab.github.io/webmorph/reference/avg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average Images — avg","text":"stimlist average image template","code":""},{"path":"https://facelab.github.io/webmorph/reference/avg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average Images — avg","text":"","code":"if (FALSE) {   avg <- demo_stim() |> avg() }"},{"path":"https://facelab.github.io/webmorph/reference/blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Make blank images — blank","title":"Make blank images — blank","text":"Make blank images","code":""},{"path":"https://facelab.github.io/webmorph/reference/blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make blank images — blank","text":"","code":"blank(n = 1, width = 100, height = 100, color = \"white\", names = \"img\")"},{"path":"https://facelab.github.io/webmorph/reference/blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make blank images — blank","text":"n number images return width width images height height images color background colour images names names images","code":""},{"path":"https://facelab.github.io/webmorph/reference/blank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make blank images — blank","text":"stimlist labelled images","code":""},{"path":"https://facelab.github.io/webmorph/reference/blank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make blank images — blank","text":"","code":"blank(5, 100, 300, color = rainbow(5))"},{"path":"https://facelab.github.io/webmorph/reference/bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get template bounds — bounds","title":"Get template bounds — bounds","text":"Get template bounds","code":""},{"path":"https://facelab.github.io/webmorph/reference/bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get template bounds — bounds","text":"","code":"bounds(stimuli, each = FALSE)"},{"path":"https://facelab.github.io/webmorph/reference/bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get template bounds — bounds","text":"stimuli stimlist Whether calculate max min full set (default) image separately","code":""},{"path":"https://facelab.github.io/webmorph/reference/bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get template bounds — bounds","text":"list min max x y values","code":""},{"path":"https://facelab.github.io/webmorph/reference/bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get template bounds — bounds","text":"","code":"demo_stim() |> bounds() |> str() #> 'data.frame':\t1 obs. of  4 variables: #>  $ min_x: num 135 #>  $ max_x: num 365 #>  $ min_y: num 92.6 #>  $ max_y: num 392  demo_stim() |> bounds(each = TRUE) #>            min_x    max_x    min_y    max_y #> f_multi 135.5556 364.8148 93.79630 391.6667 #> m_multi 135.4630 361.9444 92.59259 384.4444"},{"path":"https://facelab.github.io/webmorph/reference/c.stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine stim — c.stim","title":"Combine stim — c.stim","text":"Combine stim","code":""},{"path":"https://facelab.github.io/webmorph/reference/c.stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine stim — c.stim","text":"","code":"# S3 method for stim c(...)"},{"path":"https://facelab.github.io/webmorph/reference/c.stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine stim — c.stim","text":"... stim concatenated","code":""},{"path":"https://facelab.github.io/webmorph/reference/c.stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine stim — c.stim","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/c.stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine stimlists — c.stimlist","title":"Combine stimlists — c.stimlist","text":"Combine stimlists","code":""},{"path":"https://facelab.github.io/webmorph/reference/c.stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine stimlists — c.stimlist","text":"","code":"# S3 method for stimlist c(...)"},{"path":"https://facelab.github.io/webmorph/reference/c.stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine stimlists — c.stimlist","text":"... stimlists concatenated","code":""},{"path":"https://facelab.github.io/webmorph/reference/c.stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine stimlists — c.stimlist","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/change_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the points in a line — change_lines","title":"Change the points in a line — change_lines","text":"Change points line","code":""},{"path":"https://facelab.github.io/webmorph/reference/change_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the points in a line — change_lines","text":"","code":"change_lines(stimuli, line_id = 1, pts = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/change_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the points in a line — change_lines","text":"stimuli list class stimlist line_id IDs lines change pts vector points change line_id (deletes line NULL)","code":""},{"path":"https://facelab.github.io/webmorph/reference/change_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the points in a line — change_lines","text":"stimlist altered templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/change_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the points in a line — change_lines","text":"","code":"s <- demo_stim()[1] |>   subset_tem(features(\"face\")) s[[1]]$lines #> [[1]] #> [1]  0 26  1 27  2 #>  #> [[2]] #> [1]  3 28  4 29  5 #>  #> [[3]] #> [1] 0 2 #>  #> [[4]] #> [1] 3 5 #>  #> [[5]] #>  [1]  0 15 16 17 18 19 20 21 22 23 24 25  3 #>  #> [[6]] #> [1] 2 6 7 #>  #> [[7]] #> [1]  7  8  9 10 11 12 13 #>  #> [[8]] #> [1] 13 14  5 #>   # remove all lines s2 <- s |>   change_lines(line_id = 1:8, pts = NULL) s2[[1]]$lines #> list()  draw_tem(s2, pt.shape = \"index\", pt.size = 10) #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e97fcc39f5.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\"         # add new line s3 <- s2 |>   change_lines(line_id = 1, pts = c(0, 26, 1, 27, 2, 6:14, 5, 29, 4, 28, 3, 25:15, 0)) s3[[1]]$lines #> [[1]] #>  [1]  0 26  1 27  2  6  7  8  9 10 11 12 13 14  5 29  4 28  3 25 24 23 22 21 20 #> [26] 19 18 17 16 15  0 #>  draw_tem(s3, line.color = \"hotpink\", line.alpha = 1) #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e938f1455f.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/col2lab.html","id":null,"dir":"Reference","previous_headings":"","what":"Color to Lab Conversion — col2lab","title":"Color to Lab Conversion — col2lab","text":"R color LAB colourspace conversion. Calculated Observer. = 2°, Illuminant = D65.","code":""},{"path":"https://facelab.github.io/webmorph/reference/col2lab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color to Lab Conversion — col2lab","text":"","code":"col2lab(col)"},{"path":"https://facelab.github.io/webmorph/reference/col2lab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color to Lab Conversion — col2lab","text":"col vector hex color names","code":""},{"path":"https://facelab.github.io/webmorph/reference/col2lab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color to Lab Conversion — col2lab","text":"list L, b values","code":""},{"path":"https://facelab.github.io/webmorph/reference/col2lab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color to Lab Conversion — col2lab","text":"","code":"col2lab(c(\"red\", \"green\", \"blue\")) #> $L #> [1] 53.23288 87.73703 32.30259 #>  #> $a #> [1]  80.10931 -86.18464  79.19666 #>  #> $b #> [1]   67.22007   83.18116 -107.86368 #>"},{"path":"https://facelab.github.io/webmorph/reference/color_conv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert colors — color_conv","title":"Convert colors — color_conv","text":"Convert common color inputs specified output type, adding alpha transparency.","code":""},{"path":"https://facelab.github.io/webmorph/reference/color_conv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert colors — color_conv","text":"","code":"color_conv(   color,   alpha = 1,   from = c(\"guess\", \"col\", \"hex\", \"hexa\", \"hex3\", \"rgb\", \"rgba\"),   to = c(\"hexa\", \"hex\", \"rgba\", \"rgb\", \"hsv\") )"},{"path":"https://facelab.github.io/webmorph/reference/color_conv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert colors — color_conv","text":"color color one input formats (see Details) alpha Alpha transparency (values <=1 converted 0-255); ignored color alpha already , Input output color spaces, see Details .","code":""},{"path":"https://facelab.github.io/webmorph/reference/color_conv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert colors — color_conv","text":"color format","code":""},{"path":"https://facelab.github.io/webmorph/reference/color_conv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert colors — color_conv","text":"color: one R colours listed ccolors(), e.g., \"red\" hex: hexadecimal string, e.g., \"#FF0000\" hexa: hexadecimal string alpha, e.g., \"#FF0000FF\" hex3: abbreviated hexadecimal string, e.g., \"#F00\" rgb: vector red, green blue values 0-255, e.g., c(255, 0, 0) rgb: vector red, green, blue alpha values 0-255, e.g., c(255, 0, 0, 255) hsv: vector hue, saturation value values (0-1), e.g., c(h=0, s = 1, v = 1)","code":""},{"path":"https://facelab.github.io/webmorph/reference/color_conv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert colors — color_conv","text":"","code":"color_conv(\"red\") #> [1] \"#ff0000ff\" color_conv(\"#FF0000\") #> [1] \"#ff0000ff\" color_conv(\"#FF0000FF\") #> [1] \"#ff0000ff\" color_conv(c(255,0,0)) #> [1] \"#ff0000ff\" color_conv(c(255,0,0,255)) #> [1] \"#ff0000ff\"  color_conv(\"dodgerblue\", 0.5, to = \"rgba\") #> [1]  30 144 255 128"},{"path":"https://facelab.github.io/webmorph/reference/continuum.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuum — continuum","title":"Continuum — continuum","text":"Continuum","code":""},{"path":"https://facelab.github.io/webmorph/reference/continuum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuum — continuum","text":"","code":"continuum(from_img, to_img, from = 0, to = 1, by = 0.1, ...)"},{"path":"https://facelab.github.io/webmorph/reference/continuum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuum — continuum","text":"from_img image start to_img image end starting percentage ending percentage step size ... arguments pass trans","code":""},{"path":"https://facelab.github.io/webmorph/reference/continuum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuum — continuum","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/continuum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuum — continuum","text":"","code":"if (FALSE) {   stimuli <- demo_stim()   cont <- continuum(stimuli$f_multi, stimuli$m_multi)   animate(cont, 20, rev = TRUE) }"},{"path":"https://facelab.github.io/webmorph/reference/convert_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert templates — convert_tem","title":"Convert templates — convert_tem","text":"Convert templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/convert_tem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert templates — convert_tem","text":"","code":"convert_tem(   stimuli,   from = c(\"guess\", \"frl\", \"fpp106\", \"fpp83\", \"dlib70\", \"dlib7\"),   to = c(\"frl\", \"fpp106\", \"fpp83\", \"dlib70\", \"dlib7\") )"},{"path":"https://facelab.github.io/webmorph/reference/convert_tem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert templates — convert_tem","text":"stimuli list class stimlist id template definition stimlist images id template definition convert ","code":""},{"path":"https://facelab.github.io/webmorph/reference/convert_tem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert templates — convert_tem","text":"stimlist converted templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/convert_tem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert templates — convert_tem","text":"","code":"fpp106 <- demo_stim() |> convert_tem(\"guess\", \"fpp106\")"},{"path":"https://facelab.github.io/webmorph/reference/crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop images and templates — crop","title":"Crop images and templates — crop","text":"Remove add margins images templates. Width, height, x_off y_off can set pixels (> 2.0) proportions (0.0 2.0). Cropping anchored image center (calculated template centroid image) unless x_off y_off set.","code":""},{"path":"https://facelab.github.io/webmorph/reference/crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop images and templates — crop","text":"","code":"crop(   stimuli,   width = 1,   height = 1,   x_off = NULL,   y_off = NULL,   fill = wm_opts(\"fill\"),   patch = FALSE )"},{"path":"https://facelab.github.io/webmorph/reference/crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop images and templates — crop","text":"stimuli list class stimlist width width cropped image pixels % (<5) height height cropped image pixels % (<5) x_off x-offset pixels % (<1) (NULL horizontally centers cropped image) y_off y-offset pixels % (<1) (NULL vertically centers cropped image) fill background color cropping goes outside original image patch whether use patch function set background color","code":""},{"path":"https://facelab.github.io/webmorph/reference/crop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop images and templates — crop","text":"stimlist cropped tems /images","code":""},{"path":"https://facelab.github.io/webmorph/reference/crop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Crop images and templates — crop","text":"Fill can set R color names (see colors()) valid hex rgb values. Patch can set TRUE (defaults median color top left 10-pixel square) list arguments function patch() set background patch image.","code":""},{"path":"https://facelab.github.io/webmorph/reference/crop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop images and templates — crop","text":"","code":"stimuli <- demo_stim()  # crop to 60% width and 80% height (centered) stim_centered <- crop(stimuli, width = .60, height = .80)  # crop to upper right quadrant urq <- crop(stimuli, .5, .5, x_off = .5, y_off = 0)  # take median color from a patch bigger <- crop(stimuli, 1.2, 1.2, patch = c(100, 200, 1, 10))"},{"path":"https://facelab.github.io/webmorph/reference/crop_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop to template boundaries and pad — crop_tem","title":"Crop to template boundaries and pad — crop_tem","text":"Calculate max min x y coordinates across stimuli crop image plus padding","code":""},{"path":"https://facelab.github.io/webmorph/reference/crop_tem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop to template boundaries and pad — crop_tem","text":"","code":"crop_tem(   stimuli,   top = 10,   right = top,   bottom = top,   left = right,   each = FALSE,   ... )"},{"path":"https://facelab.github.io/webmorph/reference/crop_tem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop to template boundaries and pad — crop_tem","text":"stimuli list class stimlist top number pixels pad top right number pixels pad right side bottom number pixels pad bottom left number pixels pad left side Whether calculate bounds full set (default) image separately ... additional arguments pass crop","code":""},{"path":"https://facelab.github.io/webmorph/reference/crop_tem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop to template boundaries and pad — crop_tem","text":"list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/crop_tem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop to template boundaries and pad — crop_tem","text":"","code":"ctem <- demo_stim() |> crop_tem(20) |> draw_tem() plot(ctem) #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e95efc347e.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/demo_stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo Stimuli — demo_stim","title":"Demo Stimuli — demo_stim","text":"convenience function get demo stimuli","code":""},{"path":"https://facelab.github.io/webmorph/reference/demo_stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo Stimuli — demo_stim","text":"","code":"demo_stim(   dir = c(\"test\", \"tem_examples\", \"composite\", \"london\", \"smiling\", \"lisa\", \"zoom\",     \"rainbow\"),   pattern = NULL,   ... )"},{"path":"https://facelab.github.io/webmorph/reference/demo_stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demo Stimuli — demo_stim","text":"dir directory extdata get files pattern defaults files ... arguments pass read_tem()","code":""},{"path":"https://facelab.github.io/webmorph/reference/demo_stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Demo Stimuli — demo_stim","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/demo_stim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Demo Stimuli — demo_stim","text":"","code":"demo_stim() |> plot() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e93c519a98.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/draw_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw template — draw_tem","title":"Draw template — draw_tem","text":"Set alpha 0 omit lines points.","code":""},{"path":"https://facelab.github.io/webmorph/reference/draw_tem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw template — draw_tem","text":"","code":"draw_tem(   stimuli,   pt.color = wm_opts(\"pt.color\"),   pt.alpha = 0.75,   pt.size = NULL,   pt.shape = c(\"circle\", \"cross\", \"index\"),   line.color = wm_opts(\"line.color\"),   line.alpha = 0.5,   line.size = NULL,   bg = \"image\" )"},{"path":"https://facelab.github.io/webmorph/reference/draw_tem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw template — draw_tem","text":"stimuli list class stimlist pt.color, line.color line point color pt.alpha, line.alpha transparency (0-1), ignored color hex value transparency pt.size, line.size size pixels (scales image NULL) pt.shape shape points (\"circle\", \"cross\", \"index\") bg background color (\"image\" uses original image)","code":""},{"path":"https://facelab.github.io/webmorph/reference/draw_tem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw template — draw_tem","text":"stimlist template images","code":""},{"path":"https://facelab.github.io/webmorph/reference/draw_tem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw template — draw_tem","text":"","code":"demo_stim() |> draw_tem() |> plot() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e9e2df108.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/features.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Points — features","title":"Feature Points — features","text":"Get point indices features, usually use subset_tem.","code":""},{"path":"https://facelab.github.io/webmorph/reference/features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Points — features","text":"","code":"features(..., tem_id = c(\"frl\", \"dlib70\"))"},{"path":"https://facelab.github.io/webmorph/reference/features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feature Points — features","text":"... vector feature names (see Details) tem_id template ID (currently works frl dlib70)","code":""},{"path":"https://facelab.github.io/webmorph/reference/features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Feature Points — features","text":"vector corresponding template indices","code":""},{"path":"https://facelab.github.io/webmorph/reference/features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Points — features","text":"Available features frl template : \"gmm\", \"oval\", \"face\", \"mouth\", \"nose\", \"eyes\", \"brows\", \"left_eye\", \"right_eye\", \"left_brow\",  \"right_brow\", \"ears\", \"undereyes\", \"teeth\", \"smile_lines\", \"cheekbones\", \"philtrum\", \"chin\", \"neck\", \"halo\". Available features dlib70 template : \"teeth\", \"left_eye\", \"right_eye\", \"left_brow\", \"right_brow\", \"nose\", \"mouth\", \"face\".","code":""},{"path":"https://facelab.github.io/webmorph/reference/features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Points — features","text":"","code":"features(\"mouth\") #>  [1]  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 #> [20] 106 107 108 features(\"gmm\") #>   [1]   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #>  [19]  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35 #>  [37]  36  37  38  39  40  41  42  43  50  51  52  53  54  55  56  57  58  59 #>  [55]  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77 #>  [73]  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95 #>  [91]  96  97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 #> [109] 114 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 #> [127] 142 143 144 170 172 179 180 181 182 185 186 187 188 features(\"nose\", tem_id = \"dlib70\") #> [1] 29 30 31 32 33 34 35 36 37"},{"path":"https://facelab.github.io/webmorph/reference/format_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Format file size — format_size","title":"Format file size — format_size","text":"Format file size","code":""},{"path":"https://facelab.github.io/webmorph/reference/format_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format file size — format_size","text":"","code":"format_size(x)"},{"path":"https://facelab.github.io/webmorph/reference/format_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format file size — format_size","text":"x file size bytes","code":""},{"path":"https://facelab.github.io/webmorph/reference/format_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format file size — format_size","text":"human-readable file size","code":""},{"path":"https://facelab.github.io/webmorph/reference/format_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format file size — format_size","text":"","code":"format_size(1024*1024) #> [1] \"1 Mb\""},{"path":"https://facelab.github.io/webmorph/reference/fpp_auto_delin.html","id":null,"dir":"Reference","previous_headings":"","what":"Face++ Auto-Delineation — fpp_auto_delin","title":"Face++ Auto-Delineation — fpp_auto_delin","text":"Automatically delineate faces using Face++ (external service). Since delineation counts daily limit, need set Face++ account (see details ).","code":""},{"path":"https://facelab.github.io/webmorph/reference/fpp_auto_delin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Face++ Auto-Delineation — fpp_auto_delin","text":"","code":"fpp_auto_delin(   stimuli,   model = c(\"dlib7\", \"dlib70\", \"fpp106\", \"fpp83\"),   replace = FALSE,   face = 1 )"},{"path":"https://facelab.github.io/webmorph/reference/fpp_auto_delin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Face++ Auto-Delineation — fpp_auto_delin","text":"stimuli list class stimlist model model (fpp106, fpp83) replace FALSE, gets templates images template face face delineate image 1","code":""},{"path":"https://facelab.github.io/webmorph/reference/fpp_auto_delin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Face++ Auto-Delineation — fpp_auto_delin","text":"stimlist templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/fpp_auto_delin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Face++ Auto-Delineation — fpp_auto_delin","text":"use Face++ auto-delineation, need get free API key https://www.faceplusplus.com. signing account, go https://console.faceplusplus.com/app/apikey/list request free API key. Add key secret .Renviron file follows: FACEPLUSPLUS_KEY=\"1234567890abcdefghijk\" FACEPLUSPLUS_SECRET=\"1234567890abcdefghijk\"","code":""},{"path":"https://facelab.github.io/webmorph/reference/fpp_auto_delin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Face++ Auto-Delineation — fpp_auto_delin","text":"","code":"if (FALSE) { # requires an API key in .Renviron   auto_fpp106 <- demo_stim() |>     auto_delin(model = \"fpp106\", replace = TRUE) }"},{"path":"https://facelab.github.io/webmorph/reference/get_imgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Images into List — get_imgs","title":"Get Images into List — get_imgs","text":"Get Images List","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_imgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Images into List — get_imgs","text":"","code":"get_imgs(stimuli)"},{"path":"https://facelab.github.io/webmorph/reference/get_imgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Images into List — get_imgs","text":"stimuli list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_imgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Images into List — get_imgs","text":"list magick images","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_imgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Images into List — get_imgs","text":"","code":"demo_stim() |> get_imgs() #> # A tibble: 2 × 7 #>   format width height colorspace matte filesize density #>   <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>   #> 1 JPEG     500    500 sRGB       FALSE        0 72x72   #> 2 JPEG     500    500 sRGB       FALSE        0 72x72"},{"path":"https://facelab.github.io/webmorph/reference/get_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Information — get_info","title":"Get Information — get_info","text":"Get Information","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Information — get_info","text":"","code":"get_info(stimuli, ..., .rownames = \"id\")"},{"path":"https://facelab.github.io/webmorph/reference/get_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Information — get_info","text":"stimuli list class stimlist ... column names return .rownames whether return table rownames (NULL), rownames list item names (NA), new column (column name string)","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Information — get_info","text":"data frame vector info","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Information — get_info","text":"","code":"stimuli <- demo_stim() |>   add_info(project = \"test\", gender = c(\"F\", \"M\"))  get_info(stimuli) #> # A tibble: 2 × 6 #>   id      project gender width height   tem #>   <chr>   <chr>   <chr>  <int>  <int> <int> #> 1 f_multi test    F        500    500   189 #> 2 m_multi test    M        500    500   189 get_info(stimuli, \"gender\") #> f_multi m_multi  #>     \"F\"     \"M\""},{"path":"https://facelab.github.io/webmorph/reference/get_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Point Coordinates — get_point","title":"Get Point Coordinates — get_point","text":"Get data frame x y coordinates template point","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Point Coordinates — get_point","text":"","code":"get_point(stimuli, pt = 0)"},{"path":"https://facelab.github.io/webmorph/reference/get_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Point Coordinates — get_point","text":"stimuli list class stimlist templates pt point(s) return","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Point Coordinates — get_point","text":"data frame x y coordinates specified point(s) stimulus","code":""},{"path":"https://facelab.github.io/webmorph/reference/get_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Point Coordinates — get_point","text":"","code":"demo_stim() |> get_point(0:1) #>     image point        x        y #> 1 f_multi     0 210.7407 226.4815 #> 2 f_multi     1 288.1482 226.3889 #> 3 m_multi     0 211.1111 214.4444 #> 4 m_multi     1 286.4815 215.5556"},{"path":"https://facelab.github.io/webmorph/reference/gglabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Label with ggplot annotations — gglabel","title":"Label with ggplot annotations — gglabel","text":"Pass arguments ggplot2::annotate label image stimulus list.","code":""},{"path":"https://facelab.github.io/webmorph/reference/gglabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label with ggplot annotations — gglabel","text":"","code":"gglabel(stimuli, label = TRUE, x = 0.5, y = 0.95, geom = \"text\", ...)"},{"path":"https://facelab.github.io/webmorph/reference/gglabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label with ggplot annotations — gglabel","text":"stimuli list class stimlist label vector label text(s) TRUE use stimlist names x x-coordinate label anchor (left 0); values <= 1 interpreted proportions width y y-coordinate label anchor (bottom 0); values <= 1 interpreted proportions height geom geom use ... arguments pass ggplot2::annotate","code":""},{"path":"https://facelab.github.io/webmorph/reference/gglabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label with ggplot annotations — gglabel","text":"stimlist labelled images","code":""},{"path":[]},{"path":"https://facelab.github.io/webmorph/reference/gglabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label with ggplot annotations — gglabel","text":"","code":"stimuli <- demo_stim()  # label with image names labeled_stim <- gglabel(stimuli)  # add a watermark watermark <- gglabel(   stimuli,   label = \"watermark\",   x = 0.5,    y = 0.5,   geom = \"text\",   size = 20,   color = \"black\",   angle = -30,   alpha = 0.5 )"},{"path":"https://facelab.github.io/webmorph/reference/greyscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Make images greyscale — greyscale","title":"Make images greyscale — greyscale","text":"Make images greyscale","code":""},{"path":"https://facelab.github.io/webmorph/reference/greyscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make images greyscale — greyscale","text":"","code":"greyscale(stimuli)  grayscale(stimuli)"},{"path":"https://facelab.github.io/webmorph/reference/greyscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make images greyscale — greyscale","text":"stimuli list class stimuli","code":""},{"path":"https://facelab.github.io/webmorph/reference/greyscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make images greyscale — greyscale","text":"stimlist new images","code":""},{"path":"https://facelab.github.io/webmorph/reference/greyscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make images greyscale — greyscale","text":"","code":"demo_stim() |> greyscale() demo_stim() |> grayscale()"},{"path":"https://facelab.github.io/webmorph/reference/height.html","id":null,"dir":"Reference","previous_headings":"","what":"Image heights — height","title":"Image heights — height","text":"Image heights","code":""},{"path":"https://facelab.github.io/webmorph/reference/height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image heights — height","text":"","code":"height(stimuli, type = c(\"all\", \"min\", \"max\", \"unique\"))"},{"path":"https://facelab.github.io/webmorph/reference/height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image heights — height","text":"stimuli list class stimlist type whether return heights, min, max, unique heights","code":""},{"path":"https://facelab.github.io/webmorph/reference/height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image heights — height","text":"vector heights","code":""},{"path":"https://facelab.github.io/webmorph/reference/height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image heights — height","text":"","code":"demo_stim() |> height() #> f_multi m_multi  #>     500     500"},{"path":"https://facelab.github.io/webmorph/reference/horiz_eyes.html","id":null,"dir":"Reference","previous_headings":"","what":"Make eyes horizontal — horiz_eyes","title":"Make eyes horizontal — horiz_eyes","text":"Make eyes horizontal","code":""},{"path":"https://facelab.github.io/webmorph/reference/horiz_eyes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make eyes horizontal — horiz_eyes","text":"","code":"horiz_eyes(   stimuli,   left_eye = 0,   right_eye = 1,   fill = wm_opts(\"fill\"),   patch = FALSE )"},{"path":"https://facelab.github.io/webmorph/reference/horiz_eyes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make eyes horizontal — horiz_eyes","text":"stimuli list class stimlist left_eye first point align (defaults 0) right_eye second point align (defaults 1) fill background color pass rotate patch whether use patch function set background color","code":""},{"path":"https://facelab.github.io/webmorph/reference/horiz_eyes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make eyes horizontal — horiz_eyes","text":"stimlist rotated tems /images","code":""},{"path":"https://facelab.github.io/webmorph/reference/horiz_eyes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make eyes horizontal — horiz_eyes","text":"","code":"demo_stim() |> horiz_eyes()"},{"path":"https://facelab.github.io/webmorph/reference/image_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Comparison — image_comp","title":"Image Comparison — image_comp","text":"just convenient way use magick::image_compare webmorph stimuli. defaults \"MSE\" metric, gives linearly increasing score images along morph continuum.","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Comparison — image_comp","text":"","code":"image_comp(stim, ref_stim, metric = \"MSE\", fuzz = 0, scale = FALSE)"},{"path":"https://facelab.github.io/webmorph/reference/image_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Comparison — image_comp","text":"stim, ref_stim Stimuli compare metric string metric magick::metric_types(): \"Undefined\", \"AE\", \"Fuzz\", \"MAE\", \"MEPP\", \"MSE\", \"NCC\", \"PAE\", \"PHASH\", \"PSNR\", \"RMSE\" fuzz relative color distance (value 0 100) considered similar filling algorithm (useful AE) scale whether scale values maximum value 1 minimum 0 (useful stim 1 image includes ref_stim)","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Comparison — image_comp","text":"Difference metric","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_comp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Image Comparison — image_comp","text":"Metric Types Undefined: ? AE: Absolute Error Fuzz: ? MAE: Mean Absolute Error MEPP: Mean Error Per Pixel MSE: Mean Squared Error NCC: Normalized Cross Correlation PAE: Peak Absolute Error PHASH: Perceptual Hash PSNR: Peak Signal--Noise Ratio RMSE: Root Mean Squared Error metrics behave comparing morph continuum first image. Increases morph distance: strong negative exponential decay 0 fuzz; linear higher fuzz: AE strong negative exponential decay: PAE slight negative exponential decay: Fuzz, RMSE linear: MAE, MEPP, MSE idea: PHASH Decreases morph distance: linear: NCC, Undefined slight exponential decay: PSNR","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_comp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image Comparison — image_comp","text":"","code":"stimuli <- demo_stim() image_comp(stimuli, stimuli$m_multi) #>    f_multi    m_multi  #> 0.01020267 0.00000000  image_comp(stimuli, stimuli$m_multi, \"AE\") #> f_multi m_multi  #>  247477       0  image_comp(stimuli, stimuli$m_multi, \"AE\", fuzz = 5) #> f_multi m_multi  #>   93112       0"},{"path":"https://facelab.github.io/webmorph/reference/image_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply function to each image — image_func","title":"Apply function to each image — image_func","text":"convenience function applying magick functions take image first argument return image. fully vectorised, can set separate argument values image.","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply function to each image — image_func","text":"","code":"image_func(stimuli, func, ...)"},{"path":"https://facelab.github.io/webmorph/reference/image_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply function to each image — image_func","text":"stimuli list class stimlist func function string short name magick function (e.g., \"blur\" image_blur() ... arguments pass function","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_func.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply function to each image — image_func","text":"stimlist new images","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_func.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply function to each image — image_func","text":"","code":"stimuli <- demo_stim()  # use magick::image_* functions image_func(stimuli, \"fill\",             color = \"black\",             fuzz = 10,             point = \"+0+10\")  blur <- image_func(stimuli, \"blur\", 5, 3) oilpaint <- image_func(stimuli, \"oilpaint\", radius = 5) negate <- image_func(stimuli, \"negate\") greenscreen <- image_func(stimuli, \"transparent\",                            color = \"green\", fuzz = 5) colorize <- image_func(stimuli, \"colorize\", opacity = 50,                        color = c(\"hotpink\", \"dodgerblue\")) sharpen <- image_func(stimuli, \"contrast\", sharpen = 1)  # load a logo image and superimpose it on each image logo <- system.file(\"extdata/logo.png\", package = \"webmorphR\") |>   magick::image_read() |>   magick::image_resize(100) image_func(stimuli, \"composite\", logo, offset = \"+10+10\")  # use a self-defined function testfunc <- function(image) {   image # just return the image unprocessed } test <- image_func(stimuli, testfunc)"},{"path":"https://facelab.github.io/webmorph/reference/image_func_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Possible functions — image_func_types","title":"Possible functions — image_func_types","text":"image_func can take named function magick package, functions return image compatible current template (e.g., change size shape).","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_func_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possible functions — image_func_types","text":"","code":"image_func_types()"},{"path":"https://facelab.github.io/webmorph/reference/image_func_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Possible functions — image_func_types","text":"list compatible function names","code":""},{"path":"https://facelab.github.io/webmorph/reference/image_func_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Possible functions — image_func_types","text":"","code":"image_func_types() #>  [1] \"annotate\"       \"apply\"          \"average\"        \"background\"     #>  [5] \"blur\"           \"canny\"          \"channel\"        \"charcoal\"       #>  [9] \"colorize\"       \"combine\"        \"composite\"      \"contrast\"       #> [13] \"convert\"        \"convolve\"       \"despeckle\"      \"edge\"           #> [17] \"emboss\"         \"enhance\"        \"equalize\"       \"fill\"           #> [21] \"flatten\"        \"fuzzycmeans\"    \"fx\"             \"fx_sequence\"    #> [25] \"implode\"        \"lat\"            \"level\"          \"map\"            #> [29] \"median\"         \"modulate\"       \"morphology\"     \"motion_blur\"    #> [33] \"negate\"         \"noise\"          \"normalize\"      \"oilpaint\"       #> [37] \"ordered_dither\" \"page\"           \"quantize\"       \"reducenoise\"    #> [41] \"repage\"         \"separate\"       \"set_defines\"    \"shade\"          #> [45] \"strip\"          \"threshold\"      \"transparent\""},{"path":"https://facelab.github.io/webmorph/reference/label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label images — label","title":"Label images — label","text":"Defaults mlabel unless use arguments specific gglabel.","code":""},{"path":"https://facelab.github.io/webmorph/reference/label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label images — label","text":"","code":"label(stimuli, ...)"},{"path":"https://facelab.github.io/webmorph/reference/label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label images — label","text":"stimuli list class stimlist ... arguments pass mlabel gglabel","code":""},{"path":"https://facelab.github.io/webmorph/reference/label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label images — label","text":"stimlist labelled images","code":""},{"path":"https://facelab.github.io/webmorph/reference/label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label images — label","text":"","code":"stimuli <- demo_stim(\"test\") m_stimuli <- stimuli |>   label(text = c(\"CHINWE\", \"GEORGE\"),          gravity = c(\"north\", \"south\"),         color = \"red\")          gg_stimuli <- stimuli |>   label(label = c(\"CHINWE\", \"GEORGE\"),          x = 0.5,          y = c(1, 0.02),         vjust = c(1, 0),          size = 10,         color = \"red\")          # c(stimuli, gg_stimuli, m_stimuli) |> plot(nrow = 3)"},{"path":"https://facelab.github.io/webmorph/reference/list_to_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"List format to table format — list_to_tbl","title":"List format to table format — list_to_tbl","text":"List format table format","code":""},{"path":"https://facelab.github.io/webmorph/reference/list_to_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List format to table format — list_to_tbl","text":"","code":"list_to_tbl(list, rownames = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/list_to_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List format to table format — list_to_tbl","text":"list list lists rownames whether return table rownames (NULL), rownames list item names (NA), new column (column name string)","code":""},{"path":"https://facelab.github.io/webmorph/reference/list_to_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List format to table format — list_to_tbl","text":"data table","code":""},{"path":"https://facelab.github.io/webmorph/reference/list_to_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List format to table format — list_to_tbl","text":"","code":"list_format <- list(   item1 = list(x = 1, y = \"A\"),   item2 = list(x = 2),   item3 = list(y = \"C\", z = TRUE),   item4 = list(x = NULL, y = NULL, z = NULL),   item5 = list(),   item6 = NULL )  list_to_tbl(list_format, rownames = \"item\") #> # A tibble: 6 × 4 #>   item      x y     z     #>   <chr> <dbl> <chr> <lgl> #> 1 item1     1 A     NA    #> 2 item2     2 NA    NA    #> 3 item3    NA C     TRUE  #> 4 item4    NA NA    NA    #> 5 item5    NA NA    NA    #> 6 item6    NA NA    NA"},{"path":"https://facelab.github.io/webmorph/reference/loop.html","id":null,"dir":"Reference","previous_headings":"","what":"Loop — loop","title":"Loop — loop","text":"Loop","code":""},{"path":"https://facelab.github.io/webmorph/reference/loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loop — loop","text":"","code":"loop(stimuli, steps = 10, ...)"},{"path":"https://facelab.github.io/webmorph/reference/loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loop — loop","text":"stimuli list images morph steps number steps one image next ... arguments pass trans","code":""},{"path":"https://facelab.github.io/webmorph/reference/loop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loop — loop","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/loop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loop — loop","text":"","code":"if (FALSE) {   stimuli <- demo_stim(\"zoom\") |>     align(procrustes = TRUE) |>     crop_tem(250, 50, 50, 50) |>     resize(300)   loop <- loop(stimuli, 5)   animate(loop, 10) }"},{"path":"https://facelab.github.io/webmorph/reference/mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask Images with templates — mask","title":"Mask Images with templates — mask","text":"Create mask using template points.","code":""},{"path":"https://facelab.github.io/webmorph/reference/mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask Images with templates — mask","text":"","code":"mask(   stimuli,   mask = \"face\",   fill = wm_opts(\"fill\"),   reverse = FALSE,   expand = 1,   tem_id = \"frl\" )"},{"path":"https://facelab.github.io/webmorph/reference/mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask Images with templates — mask","text":"stimuli list class stimlist mask vector masks custom list template points fill color make mask reverse TRUE, mask covers listed areas expand many pixels expand mask tem_id template ID pass tem_def get built-mask definitions, usually one \"frl\", \"fpp106\" \"fpp83\"","code":""},{"path":"https://facelab.github.io/webmorph/reference/mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask Images with templates — mask","text":"stimlist masked images","code":""},{"path":"https://facelab.github.io/webmorph/reference/mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mask Images with templates — mask","text":"FRL templates, argument mask can vector one following: oval, face, neck, ears (left_ear, right_ear), eyes (left_eye, right_eye), brows (left_brow, right_brow), mouth, teeth, nose. Face++ templates (fpp83 fpp106), argument mask can vector one following: face, eyes (left_eye, right_eye), brows (left_brow, right_brow), mouth, teeth, nose. templates forehead points, \"face\" usually disappointing. Set custom masks using template points (0-based). View image labelled templates using plot(stim, pt.plot = TRUE, pt.shape=\"index\"). Separate points along line commas, line segments semicolons, mask areas colons. example, custom mask eyes fpp83 template: \"44,4,56,51,79;79,58,11,25,44:61,67,38,34,40;40,41,17,47,61\" set expand = 0, sometimes thin visible line multiple components mask touch.","code":""},{"path":"https://facelab.github.io/webmorph/reference/mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mask Images with templates — mask","text":"","code":"stimuli <- demo_stim() masked <- mask(stimuli, c(\"face\", \"neck\", \"ears\"), \"red\")  revmasked <- mask(stimuli, \"eyes\", \"#FFFF00\", TRUE) |>   mask(\"brows\", \"purple\", TRUE) |>   mask(\"nose\", \"#FF000066\", TRUE) |>   mask(\"mouth\", \"blue\", TRUE)"},{"path":"https://facelab.github.io/webmorph/reference/mask_oval.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply an oval mask to images — mask_oval","title":"Apply an oval mask to images — mask_oval","text":"Superimpose oval mask set images. images templates bounds = NULL, maxiumum minimum x y coordinates image calculated (overall max min = FALSE) oval dimensions position placed face.","code":""},{"path":"https://facelab.github.io/webmorph/reference/mask_oval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply an oval mask to images — mask_oval","text":"","code":"mask_oval(stimuli, bounds = NULL, fill = wm_opts(\"fill\"), each = TRUE)"},{"path":"https://facelab.github.io/webmorph/reference/mask_oval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply an oval mask to images — mask_oval","text":"stimuli list class stimlist bounds bounds (t, r, b, l) oval, calculated templates NULL fill background color mask whether calculate mask image (default) just one","code":""},{"path":"https://facelab.github.io/webmorph/reference/mask_oval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply an oval mask to images — mask_oval","text":"stimlist cropped tems /images","code":""},{"path":"https://facelab.github.io/webmorph/reference/mask_oval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply an oval mask to images — mask_oval","text":"bounds set list top, right, bottom left boundaries, used instead boundaries derived templates.","code":""},{"path":"https://facelab.github.io/webmorph/reference/mask_oval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply an oval mask to images — mask_oval","text":"","code":"omask1 <- demo_stim() |> mask_oval(fill = \"hotpink\")  # remove external points omask2 <- demo_stim() |>   subset_tem(features(\"face\")) |>   crop_tem(25) |>   mask_oval()  # set bounds manually omask3 <- demo_stim() |>   mask_oval(bounds = list(t= 70, r = 120, b = 70, l = 120))"},{"path":"https://facelab.github.io/webmorph/reference/message.html","id":null,"dir":"Reference","previous_headings":"","what":"WebmorphR Message — message","title":"WebmorphR Message — message","text":"WebmorphR Message","code":""},{"path":"https://facelab.github.io/webmorph/reference/message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WebmorphR Message — message","text":"","code":"message(...)"},{"path":"https://facelab.github.io/webmorph/reference/message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WebmorphR Message — message","text":"... arguments pass base::message()","code":""},{"path":"https://facelab.github.io/webmorph/reference/metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Image shape metrics — metrics","title":"Image shape metrics — metrics","text":"Get metrics defined template points.","code":""},{"path":"https://facelab.github.io/webmorph/reference/metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image shape metrics — metrics","text":"","code":"metrics(stimuli, formula = c(0, 1))"},{"path":"https://facelab.github.io/webmorph/reference/metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image shape metrics — metrics","text":"stimuli list class stimlist tems formula vector two points measure distance apart, string formula metric","code":""},{"path":"https://facelab.github.io/webmorph/reference/metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image shape metrics — metrics","text":"named vector metric","code":""},{"path":"https://facelab.github.io/webmorph/reference/metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Image shape metrics — metrics","text":"Reference x y coordinates point number like x[0] y[188]. Use R functions process numbers, well pow() (^(), consistency webmorph.org). Remember 0,0 top left images; e.g., min(y[0], y[1]) gives higher two pupil y-coordinates.","code":""},{"path":"https://facelab.github.io/webmorph/reference/metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image shape metrics — metrics","text":"","code":"stimuli <- demo_stim()  metrics(stimuli, c(0, 1)) # eye-spacing #>  f_multi  m_multi  #> 77.40749 75.37856   # face width-to-height ratio fwh <- \"abs(max(x[113],x[112],x[114])-min(x[110],x[111],x[109]))/abs(y[90]-min(y[20],y[25]))\" metrics(stimuli, fwh) #>  f_multi  m_multi  #> 2.203814 2.162650"},{"path":"https://facelab.github.io/webmorph/reference/mirror.html","id":null,"dir":"Reference","previous_headings":"","what":"Mirror templates and images — mirror","title":"Mirror templates and images — mirror","text":"Use tem_id get symmetry map template. tem_id omitted, images templates fully reversed (e.g., point 1 left eye original image, right eye mirrored image).","code":""},{"path":"https://facelab.github.io/webmorph/reference/mirror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mirror templates and images — mirror","text":"","code":"mirror(stimuli, tem_id = NULL, axis = \"vertical\")"},{"path":"https://facelab.github.io/webmorph/reference/mirror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mirror templates and images — mirror","text":"stimuli list class stimlist tem_id template ID passed tem_def (usually \"frl\" \"fpp106\") NULL axis vertical horizontal axis mirroring","code":""},{"path":"https://facelab.github.io/webmorph/reference/mirror.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mirror templates and images — mirror","text":"stimlist mirrored images templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/mirror.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mirror templates and images — mirror","text":"","code":"o <- demo_stim(\"test\", 1) m <- mirror(o, \"frl\")  c(o, m) |>   subset_tem(features(\"face\")) |>   draw_tem(pt.shape = \"index\", pt.color = \"white\", pt.size = 10) |>   label(c(\"original\", \"mirrored\")) |>   plot() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e92040937a.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/mlabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Label with magick annotations — mlabel","title":"Label with magick annotations — mlabel","text":"just wrapper function magick::image_annotate allows flexibility color input. Setting font, weight, style works imagemagick compiled fontconfig support.","code":""},{"path":"https://facelab.github.io/webmorph/reference/mlabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label with magick annotations — mlabel","text":"","code":"mlabel(   stimuli,   text = TRUE,   gravity = \"north\",   location = \"+0+0\",   degrees = 0,   size = 0.1,   font = \"sans\",   style = \"normal\",   weight = 400,   kerning = 0,   decoration = NULL,   color = \"black\",   strokecolor = NULL,   boxcolor = NULL )"},{"path":"https://facelab.github.io/webmorph/reference/mlabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label with magick annotations — mlabel","text":"stimuli list class stimlist text vector label text(s) TRUE use stimlist names gravity string gravity value magick::gravity_types. location geometry string location relative gravity degrees rotates text around center point size font size pixels proportion image width (< 1.0) font string font family \"sans\", \"mono\", \"serif\", \"Times\", \"Helvetica\", \"Trebuchet\", \"Georgia\", \"Palatino\" \"Comic Sans\". style value style_types example \"italic\" weight thickness font, 400 normal 700 bold. kerning increases decreases whitespace letters decoration value decoration_types: \"LineThrough\" \"None\", \"Overline\", \"Underline\" color vector label colour(s) strokecolor adds stroke (border around text) boxcolor adds background color","code":""},{"path":"https://facelab.github.io/webmorph/reference/mlabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label with magick annotations — mlabel","text":"stimlist labelled images","code":""},{"path":[]},{"path":"https://facelab.github.io/webmorph/reference/mlabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label with magick annotations — mlabel","text":"","code":"stimuli <- demo_stim(\"test\") labelled_stimuli <- stimuli |>   mlabel(text = c(\"CHINWE\", \"GEORGE\"),          gravity = c(\"north\", \"south\"),         color = \"red\")"},{"path":"https://facelab.github.io/webmorph/reference/new_stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a new stim — new_stim","title":"Make a new stim — new_stim","text":"Make new stim","code":""},{"path":"https://facelab.github.io/webmorph/reference/new_stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a new stim — new_stim","text":"","code":"new_stim(img, path = \"\", ...)"},{"path":"https://facelab.github.io/webmorph/reference/new_stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a new stim — new_stim","text":"img Image made magick path Path image file (name) ... Additional items stim","code":""},{"path":"https://facelab.github.io/webmorph/reference/new_stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a new stim — new_stim","text":"list class stim","code":""},{"path":"https://facelab.github.io/webmorph/reference/new_stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a new stimlist — new_stimlist","title":"Make a new stimlist — new_stimlist","text":"Make new stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/new_stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a new stimlist — new_stimlist","text":"","code":"new_stimlist(..., .names = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/new_stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a new stimlist — new_stimlist","text":"... Lists class \"stim\" .names Names stimulus","code":""},{"path":"https://facelab.github.io/webmorph/reference/new_stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a new stimlist — new_stimlist","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/pad.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad images — pad","title":"Pad images — pad","text":"Convenience function calcuate offsets crop","code":""},{"path":"https://facelab.github.io/webmorph/reference/pad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad images — pad","text":"","code":"pad(stimuli, top = 10, right = top, bottom = top, left = right, ...)"},{"path":"https://facelab.github.io/webmorph/reference/pad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad images — pad","text":"stimuli list class stimlist top number pixels pad top right number pixels pad right side bottom number pixels pad bottom left number pixels pad left side ... additional arguments pass crop","code":""},{"path":"https://facelab.github.io/webmorph/reference/pad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad images — pad","text":"list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/pad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad images — pad","text":"","code":"padded <- demo_stim() |> pad(10, fill = \"red\")"},{"path":"https://facelab.github.io/webmorph/reference/patch.html","id":null,"dir":"Reference","previous_headings":"","what":"Patch colour — patch","title":"Patch colour — patch","text":"Get median (mean user-defined function) colour value specified patch pixels image. useful matching background colours.","code":""},{"path":"https://facelab.github.io/webmorph/reference/patch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Patch colour — patch","text":"","code":"patch(   img,   x1 = 1,   x2 = 10,   y1 = 1,   y2 = 10,   color = c(\"hex\", \"rgb\"),   func = stats::median )"},{"path":"https://facelab.github.io/webmorph/reference/patch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Patch colour — patch","text":"img image x1 starting x pixel patch x2 ending x pixel patch y1 starting y pixel patch y2 ending y pixel patch color type color return (hex, rgb) func function apply array rgba values determine central colour (defaults median)","code":""},{"path":"https://facelab.github.io/webmorph/reference/patch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Patch colour — patch","text":"hex rgba color value","code":""},{"path":"https://facelab.github.io/webmorph/reference/patch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Patch colour — patch","text":"","code":"patch(demo_stim()[[1]]$img) #> [1] \"#B7BBBBFF\""},{"path":"https://facelab.github.io/webmorph/reference/plot.stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot stim — plot.stim","title":"Plot stim — plot.stim","text":"Plot stim","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot.stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot stim — plot.stim","text":"","code":"# S3 method for stim plot(x, y, ...)"},{"path":"https://facelab.github.io/webmorph/reference/plot.stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot stim — plot.stim","text":"x stim y omitted ... Arguments passed plot_stim","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot.stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot stim — plot.stim","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot.stim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot stim — plot.stim","text":"","code":"demo_stim() |> plot() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e948f0f6e9.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/plot.stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot stimuli — plot.stimlist","title":"Plot stimuli — plot.stimlist","text":"Plot stimuli stimlist.","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot.stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot stimuli — plot.stimlist","text":"","code":"# S3 method for stimlist plot(x, y, ...)"},{"path":"https://facelab.github.io/webmorph/reference/plot.stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot stimuli — plot.stimlist","text":"x list class stimlist y omitted ... Arguments passed plot_stim","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot.stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot stimuli — plot.stimlist","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot.stimlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot stimuli — plot.stimlist","text":"","code":"demo_stim() |> plot() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e91853494f.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/plot_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot in rows — plot_rows","title":"Plot in rows — plot_rows","text":"Plot rows","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot in rows — plot_rows","text":"","code":"plot_rows(..., top_label = FALSE)"},{"path":"https://facelab.github.io/webmorph/reference/plot_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot in rows — plot_rows","text":"... stimlists (optionally named) arguments pass label top_label whether plot row labels row inside","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot in rows — plot_rows","text":"stimlist plot","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot in rows — plot_rows","text":"","code":"up <- demo_stim() inv <- rotate(up, 180) plot_rows(upright = up, inverted = inv) #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e974c764d1.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\"        plot_rows(upright = up, inverted = inv, color = \"dodgerblue\", top_label = TRUE) #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e94eac113c.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/plot_stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot stimuli — plot_stim","title":"Plot stimuli — plot_stim","text":"Show stimuli grid.","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot_stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot stimuli — plot_stim","text":"","code":"plot_stim(   stimuli,   nrow = NULL,   ncol = NULL,   byrow = TRUE,   padding = 10,   external_pad = TRUE,   fill = wm_opts(\"fill\"),   maxwidth = wm_opts(\"plot.maxwidth\"),   maxheight = wm_opts(\"plot.maxheight\") )"},{"path":"https://facelab.github.io/webmorph/reference/plot_stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot stimuli — plot_stim","text":"stimuli list class stimlist nrow number rows ncol number columns byrow fill grid rows (first ncol images first row); FALSE, fills columns (first nrow images first column) padding around image pixels external_pad whether include external padding fill background color maxwidth, maxheight maximum width height grid pixels","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot_stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot stimuli — plot_stim","text":"stimlist grid image (templates)","code":""},{"path":"https://facelab.github.io/webmorph/reference/plot_stim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot stimuli — plot_stim","text":"","code":"demo_stim() |> plot_stim() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e95a189c48.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/print.stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Print stim — print.stim","title":"Print stim — print.stim","text":"Print stim","code":""},{"path":"https://facelab.github.io/webmorph/reference/print.stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print stim — print.stim","text":"","code":"# S3 method for stim print(x, ...)"},{"path":"https://facelab.github.io/webmorph/reference/print.stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print stim — print.stim","text":"x list class stim ... arguments passed methods","code":""},{"path":"https://facelab.github.io/webmorph/reference/print.stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print stim — print.stim","text":"prints summary info returns x","code":""},{"path":"https://facelab.github.io/webmorph/reference/print.stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Print stimlist — print.stimlist","title":"Print stimlist — print.stimlist","text":"Print stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/print.stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print stimlist — print.stimlist","text":"","code":"# S3 method for stimlist print(x, ...)"},{"path":"https://facelab.github.io/webmorph/reference/print.stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print stimlist — print.stimlist","text":"x list class stimlist ... arguments passed methods","code":""},{"path":"https://facelab.github.io/webmorph/reference/print.stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print stimlist — print.stimlist","text":"prints summary info returns x","code":""},{"path":"https://facelab.github.io/webmorph/reference/procrustes_align.html","id":null,"dir":"Reference","previous_headings":"","what":"Procrustes align templates — procrustes_align","title":"Procrustes align templates — procrustes_align","text":"Procrustes align templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/procrustes_align.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Procrustes align templates — procrustes_align","text":"","code":"procrustes_align(data, ref_img = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/procrustes_align.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Procrustes align templates — procrustes_align","text":"data Template points ref_img Reference image","code":""},{"path":"https://facelab.github.io/webmorph/reference/procrustes_align.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Procrustes align templates — procrustes_align","text":"coordinates","code":""},{"path":"https://facelab.github.io/webmorph/reference/quick_delin.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly delineate images — quick_delin","title":"Quickly delineate images — quick_delin","text":"Best used just points, like delineating eyes, top, right, bottom left boundaries. overwrite existing templates.","code":""},{"path":"https://facelab.github.io/webmorph/reference/quick_delin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly delineate images — quick_delin","text":"","code":"quick_delin(stimuli, n_points = 0)"},{"path":"https://facelab.github.io/webmorph/reference/quick_delin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly delineate images — quick_delin","text":"stimuli list class stimlist n_points Number points template automatically saves moves next image.","code":""},{"path":"https://facelab.github.io/webmorph/reference/quick_delin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly delineate images — quick_delin","text":"stimlist new templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/read_stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Read stimuli — read_stim","title":"Read stimuli — read_stim","text":"Read stimuli","code":""},{"path":"https://facelab.github.io/webmorph/reference/read_stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read stimuli — read_stim","text":"","code":"read_stim(path, pattern = NULL, ...)"},{"path":"https://facelab.github.io/webmorph/reference/read_stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read stimuli — read_stim","text":"path Path directory containing image /template files (single file path) pattern Vector patterns use search files, vector image indices (e.g., 1:4 selects first 4 images templates exist) ... arguments pass functions, e.g., breaks argument unique_names()","code":""},{"path":"https://facelab.github.io/webmorph/reference/read_stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read stimuli — read_stim","text":"list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/read_stim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read stimuli — read_stim","text":"","code":"path <- system.file(\"extdata/test\", package = \"webmorphR\") stimuli <- read_stim(path)"},{"path":"https://facelab.github.io/webmorph/reference/readline_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check readline input — readline_check","title":"Check readline input — readline_check","text":"Check readline input","code":""},{"path":"https://facelab.github.io/webmorph/reference/readline_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check readline input — readline_check","text":"","code":"readline_check(   prompt,   type = c(\"numeric\", \"integer\", \"length\", \"grep\"),   min = -Inf,   max = Inf,   warning = NULL,   default = NULL,   ... )"},{"path":"https://facelab.github.io/webmorph/reference/readline_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check readline input — readline_check","text":"prompt prompt readline type type check perform, one  c(\"numeric\", \"integer\", \"length\", \"grep\") min minimum value max maximum value warning optional custom warning message default default option return entry blank, NULL allows default, default value displayed text square brackets ... arguments pass grep","code":""},{"path":"https://facelab.github.io/webmorph/reference/readline_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check readline input — readline_check","text":"validated result readline","code":""},{"path":"https://facelab.github.io/webmorph/reference/readline_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check readline input — readline_check","text":"","code":"if (FALSE) { if(interactive()){ readline_check(\"Type a number: \", \"numeric\") readline_check(\"Type two characters: \",                 \"length\", min = 2, max = 2) readline_check(\"Type at least 3 characters: \",                 \"length\", min = 3) readline_check(\"Type no more than 4 characters: \",                  \"length\", max = 4) readline_check(\"Type a letter and a number: \",                 \"grep\", pattern = \"^[a-zA-Z]\\\\d$\") }}"},{"path":"https://facelab.github.io/webmorph/reference/remove_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove templates — remove_tem","title":"Remove templates — remove_tem","text":"Remove templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/remove_tem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove templates — remove_tem","text":"","code":"remove_tem(stimuli)"},{"path":"https://facelab.github.io/webmorph/reference/remove_tem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove templates — remove_tem","text":"stimuli list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/remove_tem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove templates — remove_tem","text":"list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/remove_tem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove templates — remove_tem","text":"","code":"demo_stim() |> remove_tem()"},{"path":"https://facelab.github.io/webmorph/reference/rep.stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat stim in a list — rep.stim","title":"Repeat stim in a list — rep.stim","text":"Repeat stim list","code":""},{"path":"https://facelab.github.io/webmorph/reference/rep.stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat stim in a list — rep.stim","text":"","code":"# S3 method for stim rep(x, ...)"},{"path":"https://facelab.github.io/webmorph/reference/rep.stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat stim in a list — rep.stim","text":"x list class stim ... Additional arguments pass base::rep()","code":""},{"path":"https://facelab.github.io/webmorph/reference/rep.stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat stim in a list — rep.stim","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/rep.stim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeat stim in a list — rep.stim","text":"","code":"a <- demo_stim() rep(a[[1]], 3)"},{"path":"https://facelab.github.io/webmorph/reference/rep.stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat stim in a list — rep.stimlist","title":"Repeat stim in a list — rep.stimlist","text":"Repeat stim list","code":""},{"path":"https://facelab.github.io/webmorph/reference/rep.stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat stim in a list — rep.stimlist","text":"","code":"# S3 method for stimlist rep(x, ...)"},{"path":"https://facelab.github.io/webmorph/reference/rep.stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat stim in a list — rep.stimlist","text":"x stimlist ... Additional arguments pass base::rep()","code":""},{"path":"https://facelab.github.io/webmorph/reference/rep.stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat stim in a list — rep.stimlist","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/rep.stimlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeat stim in a list — rep.stimlist","text":"","code":"demo_stim() |>   rep(3) |>   rotate(seq(10, 60, 10), fill = rainbow(6)) |>   plot() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e92b114840.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/resize.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize templates and images — resize","title":"Resize templates and images — resize","text":"Resize templates images","code":""},{"path":"https://facelab.github.io/webmorph/reference/resize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize templates and images — resize","text":"","code":"resize(stimuli, width = NULL, height = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/resize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize templates and images — resize","text":"stimuli list class stimlist width new width (pixels percent < 10) height new height (pixels percent < 10)","code":""},{"path":"https://facelab.github.io/webmorph/reference/resize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resize templates and images — resize","text":"stimlist resized tems /images","code":""},{"path":"https://facelab.github.io/webmorph/reference/resize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resize templates and images — resize","text":"","code":"resized <- demo_stim() |>   resize(.5, .75) |>   draw_tem()"},{"path":"https://facelab.github.io/webmorph/reference/rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate templates and images — rotate","title":"Rotate templates and images — rotate","text":"Rotate templates images","code":""},{"path":"https://facelab.github.io/webmorph/reference/rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate templates and images — rotate","text":"","code":"rotate(   stimuli,   degrees = 0,   fill = wm_opts(\"fill\"),   patch = FALSE,   keep_size = TRUE )"},{"path":"https://facelab.github.io/webmorph/reference/rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate templates and images — rotate","text":"stimuli list class stimlist degrees degrees rotate fill background color patch whether use patch function set background color keep_size whether keep original size expand images new rotated size","code":""},{"path":"https://facelab.github.io/webmorph/reference/rotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate templates and images — rotate","text":"stimlist rotated tems /images","code":""},{"path":"https://facelab.github.io/webmorph/reference/rotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate templates and images — rotate","text":"","code":"rotated <- demo_stim() |>   rotate(45, fill = \"dodgerblue\") |>   draw_tem()  rotate_patch <- demo_stim() |>   rotate(45, patch = TRUE, keep_size = FALSE)"},{"path":"https://facelab.github.io/webmorph/reference/rotated_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Image size after rotation — rotated_size","title":"Image size after rotation — rotated_size","text":"Image size rotation","code":""},{"path":"https://facelab.github.io/webmorph/reference/rotated_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image size after rotation — rotated_size","text":"","code":"rotated_size(width, height, degrees)"},{"path":"https://facelab.github.io/webmorph/reference/rotated_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image size after rotation — rotated_size","text":"width Width original image height Height original image degrees Rotation degreed","code":""},{"path":"https://facelab.github.io/webmorph/reference/rotated_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image size after rotation — rotated_size","text":"list rotated width height","code":""},{"path":"https://facelab.github.io/webmorph/reference/rotated_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image size after rotation — rotated_size","text":"","code":"rotated_size(100, 100, 45) #> $width #> [1] 141.4214 #>  #> $height #> [1] 141.4214 #>"},{"path":"https://facelab.github.io/webmorph/reference/same_tems.html","id":null,"dir":"Reference","previous_headings":"","what":"Check All Templates are the Same — same_tems","title":"Check All Templates are the Same — same_tems","text":"Check Templates ","code":""},{"path":"https://facelab.github.io/webmorph/reference/same_tems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check All Templates are the Same — same_tems","text":"","code":"same_tems(stimuli)"},{"path":"https://facelab.github.io/webmorph/reference/same_tems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check All Templates are the Same — same_tems","text":"stimuli list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/same_tems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check All Templates are the Same — same_tems","text":"logical","code":""},{"path":"https://facelab.github.io/webmorph/reference/same_tems.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check All Templates are the Same — same_tems","text":"","code":"stim <- demo_stim() stim2 <- subset_tem(stim, features(\"gmm\"))  same_tems(stim) #> [1] TRUE  c(stim, stim2) |> same_tems() #> [1] FALSE"},{"path":"https://facelab.github.io/webmorph/reference/setnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Set stimulus names in a stimlist — setnames","title":"Set stimulus names in a stimlist — setnames","text":"Set stimulus names stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/setnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set stimulus names in a stimlist — setnames","text":"","code":"setnames(   stimuli,   new_names = NULL,   prefix = \"\",   suffix = \"\",   pattern = NULL,   replacement = NULL,   ... )"},{"path":"https://facelab.github.io/webmorph/reference/setnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set stimulus names in a stimlist — setnames","text":"stimuli stimlist new_names Vector new names - must length stimlist prefix String prefix name suffix String append name pattern Pattern gsub replacement Replacement gsub ... Additional arguments pass base::gsub()","code":""},{"path":"https://facelab.github.io/webmorph/reference/setnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set stimulus names in a stimlist — setnames","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/setnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set stimulus names in a stimlist — setnames","text":"","code":"demo_stim() |>   setnames(prefix = \"new_\") |>   names() #> [1] \"new_f_multi\" \"new_m_multi\""},{"path":"https://facelab.github.io/webmorph/reference/social_media_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Social Media Image Sizes — social_media_size","title":"Social Media Image Sizes — social_media_size","text":"convenience function getting recommended dimensions images social media sites.","code":""},{"path":"https://facelab.github.io/webmorph/reference/social_media_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Social Media Image Sizes — social_media_size","text":"","code":"social_media_size(platform = c(\"twitter\", \"instagram\"), type = \"default\")"},{"path":"https://facelab.github.io/webmorph/reference/social_media_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Social Media Image Sizes — social_media_size","text":"platform currently \"twitter\" type type image","code":""},{"path":"https://facelab.github.io/webmorph/reference/social_media_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Social Media Image Sizes — social_media_size","text":"named vector width height pixels","code":""},{"path":"https://facelab.github.io/webmorph/reference/social_media_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Social Media Image Sizes — social_media_size","text":"Twitter: link: Image Tweet shared link one: Tweet sharing single image (default) two: Tweet sharing two images three_left: Tweet sharing three images, Left image three_tight Tweet sharing three images, Right images four: Tweet sharing four images Instagram: feed_large: (default) feed_small: stories_large: stories_small:","code":""},{"path":"https://facelab.github.io/webmorph/reference/social_media_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Social Media Image Sizes — social_media_size","text":"","code":"social_media_size(\"twitter\", \"link\") #>  width height  #>   1200    628  social_media_size(\"twitter\", \"one\") #>  width height  #>   1200    675  social_media_size(\"twitter\", \"two\") #>  width height  #>    700    800"},{"path":"https://facelab.github.io/webmorph/reference/squash_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"Squash Template Points — squash_tem","title":"Squash Template Points — squash_tem","text":"Move template points outside image boundaries (e.g., negative values larger image width height) borders image.","code":""},{"path":"https://facelab.github.io/webmorph/reference/squash_tem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Squash Template Points — squash_tem","text":"","code":"squash_tem(stimuli)"},{"path":"https://facelab.github.io/webmorph/reference/squash_tem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Squash Template Points — squash_tem","text":"stimuli list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/squash_tem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Squash Template Points — squash_tem","text":"list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/squash_tem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Squash Template Points — squash_tem","text":"","code":"nosquash <- demo_stim()[1] |>    crop(0.4, 0.5) |> pad(50) |>    draw_tem(line.size = 3)  squashed <- demo_stim()[1] |>    crop(0.4, 0.5) |> squash_tem() |> pad(50) |>    draw_tem(line.size = 3)    # c(nosquash, squashed) |> plot()"},{"path":"https://facelab.github.io/webmorph/reference/sub-.stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract stimlist elements — [.stimlist","title":"Extract stimlist elements — [.stimlist","text":"Extract stimlist elements","code":""},{"path":"https://facelab.github.io/webmorph/reference/sub-.stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract stimlist elements — [.stimlist","text":"","code":"# S3 method for stimlist [(x, i)"},{"path":"https://facelab.github.io/webmorph/reference/sub-.stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract stimlist elements — [.stimlist","text":"x stimlist extract elements indices selected","code":""},{"path":"https://facelab.github.io/webmorph/reference/sub-.stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract stimlist elements — [.stimlist","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/sub-subset-.stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace stimlist element — [[<-.stimlist","title":"Replace stimlist element — [[<-.stimlist","text":"Replace stimlist element","code":""},{"path":"https://facelab.github.io/webmorph/reference/sub-subset-.stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace stimlist element — [[<-.stimlist","text":"","code":"# S3 method for stimlist [[(x, i) <- value"},{"path":"https://facelab.github.io/webmorph/reference/sub-subset-.stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace stimlist element — [[<-.stimlist","text":"x stimlist extract elements index replaced value stim element replace ","code":""},{"path":"https://facelab.github.io/webmorph/reference/sub-subset-.stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace stimlist element — [[<-.stimlist","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/subset.stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Stimulus Lists — subset.stimlist","title":"Subset Stimulus Lists — subset.stimlist","text":"Returns subset stimulus list meeting condition.","code":""},{"path":"https://facelab.github.io/webmorph/reference/subset.stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Stimulus Lists — subset.stimlist","text":"","code":"# S3 method for stimlist subset(x, subset, ...)"},{"path":"https://facelab.github.io/webmorph/reference/subset.stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Stimulus Lists — subset.stimlist","text":"x list class stimlist subset character string use pattern searching stimulus IDs, logical expression indicating elements rows keep: missing values taken false. ... arguments passed methods.","code":""},{"path":"https://facelab.github.io/webmorph/reference/subset.stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Stimulus Lists — subset.stimlist","text":"list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/subset.stimlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Stimulus Lists — subset.stimlist","text":"","code":"f <- demo_stim() |> subset(\"f_\")"},{"path":"https://facelab.github.io/webmorph/reference/subset_tem.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset template points — subset_tem","title":"Subset template points — subset_tem","text":"Subset template points","code":""},{"path":"https://facelab.github.io/webmorph/reference/subset_tem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset template points — subset_tem","text":"","code":"subset_tem(stimuli, ..., keep = TRUE)"},{"path":"https://facelab.github.io/webmorph/reference/subset_tem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset template points — subset_tem","text":"stimuli list class stimlist ... vectors points keep delete keep whether keep delete points","code":""},{"path":"https://facelab.github.io/webmorph/reference/subset_tem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset template points — subset_tem","text":"stimlist altered templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/subset_tem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset template points — subset_tem","text":"","code":"demo_stim()[1] |>   subset_tem(features(\"gmm\")) |>   draw_tem() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e97e345058.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/svgBezier.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Bezier Curves from Template Points — svgBezier","title":"Construct Bezier Curves from Template Points — svgBezier","text":"Construct Bezier Curves Template Points","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgBezier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Bezier Curves from Template Points — svgBezier","text":"","code":"svgBezier(v, idx = 1)"},{"path":"https://facelab.github.io/webmorph/reference/svgBezier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Bezier Curves from Template Points — svgBezier","text":"v matrix template points x y rows point columns idx index line segment within path","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgBezier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Bezier Curves from Template Points — svgBezier","text":"string path component","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgBezier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Bezier Curves from Template Points — svgBezier","text":"","code":"stimuli <- demo_stim() # get upper and lower eye points l_upper <- stimuli$f_multi$points[, 18:22] l_lower <- stimuli$f_multi$points[, c(22, 30, 29, 28, 18)] svgBezier(l_upper, 1) #> [1] \"M 293.98 222.87\\nQ 220.58 228.50, 195.00 228.70\\nC 192.85 228.72, 199.36 224.63, 201.57 223.61\\nC 204.03 222.49, 207.90 221.41, 210.56 221.57\\nQ 213.45 221.75, 220.09 224.72\" svgBezier(l_lower, 2) #> [1] \"Q 214.00 232.49, 210.74 233.89\\nC 208.42 234.88, 199.15 232.82, 201.48 232.69\\nC 227.07 231.26, 278.83 231.35, 303.80 228.70\\nQ 306.58 228.41, 293.98 222.87\""},{"path":"https://facelab.github.io/webmorph/reference/svgControlPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Control Points — svgControlPoints","title":"Get Control Points — svgControlPoints","text":"Get Control Points","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgControlPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Control Points — svgControlPoints","text":"","code":"svgControlPoints(x0, y0, x1, y1, x2, y2, t = 0.3)"},{"path":"https://facelab.github.io/webmorph/reference/svgControlPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Control Points — svgControlPoints","text":"x0, y0 coordinates previous point x1, y1 coordinates main point x2, y2 coordinates next point t curving factor (0-1)","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgControlPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Control Points — svgControlPoints","text":"x- y-coordinates control points (x1, y1, x2, y2)","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgControlPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Control Points — svgControlPoints","text":"","code":"svgControlPoints(10, 10, 20, 20, 30, 10) #> [1] 17 20 23 20"},{"path":"https://facelab.github.io/webmorph/reference/svgCubicTo.html","id":null,"dir":"Reference","previous_headings":"","what":"SVG Path Quadratic Curve — svgCubicTo","title":"SVG Path Quadratic Curve — svgCubicTo","text":"SVG Path Quadratic Curve","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgCubicTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVG Path Quadratic Curve — svgCubicTo","text":"","code":"svgCubicTo(x1, y1, x2, y2, x, y, digits = 2)"},{"path":"https://facelab.github.io/webmorph/reference/svgCubicTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SVG Path Quadratic Curve — svgCubicTo","text":"x1, y1, x2, y2 coordinates control points x, y coordinates main point digits number digits round ","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgCubicTo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SVG Path Quadratic Curve — svgCubicTo","text":"string Q path component","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgCubicTo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SVG Path Quadratic Curve — svgCubicTo","text":"","code":"svgCubicTo(20.123, 30.456, 40.123, 50.456, 60.123, 70.456) #> [1] \"C 20.12 30.46, 40.12 50.46, 60.12 70.46\""},{"path":"https://facelab.github.io/webmorph/reference/svgLineTo.html","id":null,"dir":"Reference","previous_headings":"","what":"SVG Path Line — svgLineTo","title":"SVG Path Line — svgLineTo","text":"SVG Path Line","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgLineTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVG Path Line — svgLineTo","text":"","code":"svgLineTo(x, y, digits = 2)"},{"path":"https://facelab.github.io/webmorph/reference/svgLineTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SVG Path Line — svgLineTo","text":"x, y coordinates digits number digits round ","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgLineTo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SVG Path Line — svgLineTo","text":"string L path component","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgLineTo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SVG Path Line — svgLineTo","text":"","code":"svgLineTo(20.123, 30.456) #> [1] \"L 20.12 30.46\""},{"path":"https://facelab.github.io/webmorph/reference/svgMoveTo.html","id":null,"dir":"Reference","previous_headings":"","what":"SVG Path Move — svgMoveTo","title":"SVG Path Move — svgMoveTo","text":"SVG Path Move","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgMoveTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVG Path Move — svgMoveTo","text":"","code":"svgMoveTo(x, y, digits = 2)"},{"path":"https://facelab.github.io/webmorph/reference/svgMoveTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SVG Path Move — svgMoveTo","text":"x, y coordinates digits number digits round ","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgMoveTo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SVG Path Move — svgMoveTo","text":"string M path component","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgMoveTo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SVG Path Move — svgMoveTo","text":"","code":"svgMoveTo(20.123, 30.456) #> [1] \"M 20.12 30.46\""},{"path":"https://facelab.github.io/webmorph/reference/svgQuadraticTo.html","id":null,"dir":"Reference","previous_headings":"","what":"SVG Path Quadratic Curve — svgQuadraticTo","title":"SVG Path Quadratic Curve — svgQuadraticTo","text":"SVG Path Quadratic Curve","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgQuadraticTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVG Path Quadratic Curve — svgQuadraticTo","text":"","code":"svgQuadraticTo(x1, y1, x, y, digits = 2)"},{"path":"https://facelab.github.io/webmorph/reference/svgQuadraticTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SVG Path Quadratic Curve — svgQuadraticTo","text":"x1, y1 coordinates control point x, y coordinates main point digits number digits round ","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgQuadraticTo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SVG Path Quadratic Curve — svgQuadraticTo","text":"string Q path component","code":""},{"path":"https://facelab.github.io/webmorph/reference/svgQuadraticTo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SVG Path Quadratic Curve — svgQuadraticTo","text":"","code":"svgQuadraticTo(20.123, 30.456, 40.123, 50.456) #> [1] \"Q 20.12 30.46, 40.12 50.46\""},{"path":"https://facelab.github.io/webmorph/reference/symmetrize.html","id":null,"dir":"Reference","previous_headings":"","what":"Symmetrise Images — symmetrize","title":"Symmetrise Images — symmetrize","text":"Symmetrise Images","code":""},{"path":"https://facelab.github.io/webmorph/reference/symmetrize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Symmetrise Images — symmetrize","text":"","code":"symmetrize(stimuli, shape = 1, color = 1, tem_id = \"frl\", ...)"},{"path":"https://facelab.github.io/webmorph/reference/symmetrize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Symmetrise Images — symmetrize","text":"stimuli images symmatrise (list class stimlist) shape, color amount symmetry (0 none, 1.0 perfect) tem_id template ID passed tem_def (usually \"frl\" \"fpp106\") ... Additional arguments pass trans","code":""},{"path":"https://facelab.github.io/webmorph/reference/symmetrize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Symmetrise Images — symmetrize","text":"stimlist symmetrised images templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/symmetrize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Symmetrise Images — symmetrize","text":"","code":"if (FALSE) {   stimuli <- demo_stim()[1]    sym_both <- symmetrize(stimuli)   sym_shape <- symmetrize(stimuli, color = 0)   sym_color <- symmetrize(stimuli, shape = 0)   sym_anti <- symmetrize(stimuli, shape = -1.0, color = 0) }"},{"path":"https://facelab.github.io/webmorph/reference/tem_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Get template definition — tem_def","title":"Get template definition — tem_def","text":"Template definitions specially formatted files contain information templates needed things like symmetrising masking images. function mostly used internally.","code":""},{"path":"https://facelab.github.io/webmorph/reference/tem_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get template definition — tem_def","text":"","code":"tem_def(tem_id = \"frl\", path = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/tem_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get template definition — tem_def","text":"tem_id numeric ID template retrieve webmorph.org path path local tem definition file","code":""},{"path":"https://facelab.github.io/webmorph/reference/tem_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get template definition — tem_def","text":"list template definition","code":""},{"path":"https://facelab.github.io/webmorph/reference/tem_def.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get template definition — tem_def","text":"","code":"frl <- tem_def(\"frl\") frl$points[1:10, ] #>    n                      name       x       y sym fpp106.x fpp106.y #> 1  0                left pupil 165.659 275.234   1        0        0 #> 2  1               right pupil 284.339 275.231   0        1        1 #> 3  2          top of left iris 165.219 267.225  10       37       37 #> 4  3     top-left of left iris 155.781 269.909  17       NA       NA #> 5  4         left of left iris 154.252 276.694  16       NA        0 #> 6  5  bottom-left of left iris 157.117 282.607  15       NA       NA #> 7  6       bottom of left iris 165.507 286.083  14       41       41 #> 8  7 bottom-right of left iris 173.839 282.517  13       NA       NA #> 9  8        right of left iris 176.720 276.472  12       NA        0 #> 10 9    top-right of left iris 175.040 270.366  11       NA       NA  fpp106 <- tem_def(\"fpp106\") fpp106$lines |> str() #> List of 15 #>  $ : int [1:33] 2 3 4 5 6 7 8 9 10 11 ... #>  $ : int [1:7] 86 87 88 89 90 91 92 #>  $ : int [1:7] 86 93 98 99 100 97 92 #>  $ : int [1:6] 86 94 95 96 97 92 #>  $ : int [1:7] 86 101 102 103 104 105 92 #>  $ : int [1:5] 35 36 37 38 39 #>  $ : int [1:5] 35 42 41 40 39 #>  $ : int [1:5] 44 45 46 47 48 #>  $ : int [1:5] 44 51 50 49 48 #>  $ : int [1:6] 53 54 55 56 57 58 #>  $ : int [1:5] 53 61 60 59 58 #>  $ : int [1:6] 62 63 64 65 66 67 #>  $ : int [1:5] 62 70 69 68 67 #>  $ : int [1:11] 75 76 77 78 79 80 81 82 83 84 ... #>  $ : int [1:5] 71 72 73 74 80  fpp83 <- tem_def(\"fpp83\") fpp83$mask |> str() #> List of 8 #>  $ left_eye  :List of 2 #>   ..$ : int [1:5] 44 4 56 51 79 #>   ..$ : int [1:5] 79 58 11 25 44 #>  $ right_eye :List of 2 #>   ..$ : int [1:5] 61 67 38 34 40 #>   ..$ : int [1:5] 40 41 17 47 61 #>  $ nose      :List of 1 #>   ..$ : int [1:10] 70 71 54 78 37 77 33 74 59 70 #>  $ mouth     :List of 2 #>   ..$ : int [1:7] 29 0 3 26 72 42 45 #>   ..$ : int [1:7] 45 75 2 12 39 10 29 #>  $ teeth     :List of 2 #>   ..$ : int [1:5] 29 52 14 9 45 #>   ..$ : int [1:5] 45 46 82 1 29 #>  $ left_brow :List of 2 #>   ..$ : int [1:5] 32 62 68 80 48 #>   ..$ : int [1:5] 48 49 5 7 32 #>  $ right_brow:List of 2 #>   ..$ : int [1:5] 16 64 15 69 66 #>   ..$ : int [1:5] 66 43 55 8 16 #>  $ face      :List of 1 #>   ..$ : int [1:22] 24 23 22 21 20 19 18 53 13 6 ..."},{"path":"https://facelab.github.io/webmorph/reference/tems_to_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert stimuli to array for geomorph — tems_to_array","title":"Convert stimuli to array for geomorph — tems_to_array","text":"Convert stimuli array geomorph","code":""},{"path":"https://facelab.github.io/webmorph/reference/tems_to_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert stimuli to array for geomorph — tems_to_array","text":"","code":"tems_to_array(stimuli)"},{"path":"https://facelab.github.io/webmorph/reference/tems_to_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert stimuli to array for geomorph — tems_to_array","text":"stimuli list class stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/tems_to_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert stimuli to array for geomorph — tems_to_array","text":"3D array","code":""},{"path":"https://facelab.github.io/webmorph/reference/tems_to_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert stimuli to array for geomorph — tems_to_array","text":"","code":"data <- demo_stim() |> tems_to_array() dim(data) #> [1] 189   2   2"},{"path":"https://facelab.github.io/webmorph/reference/to_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize and crop/pad images to a specified size — to_size","title":"Resize and crop/pad images to a specified size — to_size","text":"Resize crop/pad images specified size","code":""},{"path":"https://facelab.github.io/webmorph/reference/to_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize and crop/pad images to a specified size — to_size","text":"","code":"to_size(   stimuli,   width,   height = NULL,   fill = wm_opts(\"fill\"),   patch = FALSE,   crop = FALSE,   keep_rels = FALSE )"},{"path":"https://facelab.github.io/webmorph/reference/to_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize and crop/pad images to a specified size — to_size","text":"stimuli class stimlist width target width (vector width height) height target height (null width dimensions) fill background color cropping goes outside original image patch whether use patch function set background color crop whether crop pad images make specified size keep_rels whether keep size relationships images set, make maximum size","code":""},{"path":"https://facelab.github.io/webmorph/reference/to_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resize and crop/pad images to a specified size — to_size","text":"stimlist cropped tems /images","code":""},{"path":"https://facelab.github.io/webmorph/reference/to_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resize and crop/pad images to a specified size — to_size","text":"","code":"# make images with different aspect ratios and sizes stimuli <- demo_stim() |> crop(c(0.8, 1.0)) |> resize(c(1.0, 0.5))  to_size(stimuli, 300, 400, fill = \"dodgerblue\") |> plot() #> [1] \"/var/folders/6w/y3tyzgs1403cz7tgw8k4lk600000gq/T//RtmpoJvTF8/file124e960bc7993.png\" #> attr(,\"class\") #> [1] \"knit_image_paths\" \"knit_asis\""},{"path":"https://facelab.github.io/webmorph/reference/trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Images — trans","title":"Transform Images — trans","text":"Transform Images","code":""},{"path":"https://facelab.github.io/webmorph/reference/trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Images — trans","text":"","code":"trans(   trans_img = NULL,   from_img = NULL,   to_img = NULL,   shape = 0,   color = 0,   texture = 0,   outname = NULL,   norm = c(\"none\", \"twopoint\", \"rigid\"),   normpoint = 0:1,   sample_contours = TRUE,   warp = c(\"multiscale\", \"linear\", \"multiscalerb\") )"},{"path":"https://facelab.github.io/webmorph/reference/trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Images — trans","text":"trans_img image(s) transform (list class stimlist) from_img negative transform dimension endpoint (0% image) to_img positive transform dimension endpoint (100% image) shape, color, texture amount change along vector defined from_img to_img (can range -3 +3) outname name save image norm normalise images normpoint points twopoint normalisation sample_contours whether sample contours just points warp warp type","code":""},{"path":"https://facelab.github.io/webmorph/reference/trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Images — trans","text":"stimlist transformed images templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Images — trans","text":"","code":"if (FALSE) {   stimuli <- demo_stim()   sexdim <- trans(stimuli, stimuli$f_multi, stimuli$m_multi,                   shape = c(fem = -0.5, masc = 0.5))   sexdim |> draw_tem() |> label() |> plot() }"},{"path":"https://facelab.github.io/webmorph/reference/unique_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique names — unique_names","title":"Get unique names — unique_names","text":"Get unique names","code":""},{"path":"https://facelab.github.io/webmorph/reference/unique_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique names — unique_names","text":"","code":"unique_names(full_names, breaks = \"/\", remove_ext = TRUE)"},{"path":"https://facelab.github.io/webmorph/reference/unique_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique names — unique_names","text":"full_names list full names breaks regex breaking names parts. \"\", character assessed. remove_ext whether remove extension comparing","code":""},{"path":"https://facelab.github.io/webmorph/reference/unique_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique names — unique_names","text":"list vector names common beginnings removed","code":""},{"path":"https://facelab.github.io/webmorph/reference/unique_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get unique names — unique_names","text":"","code":"# breaks at / unique_names(c(\"common/face_A.tem\",                \"common/face_B.tem\")) #> common/face_A.tem common/face_B.tem  #>          \"face_A\"          \"face_B\"   # breaks at each character unique_names(c(\"common/face_A.tem\",                \"common/face_B.tem\"),                breaks = \"\") #> common/face_A.tem common/face_B.tem  #>               \"A\"               \"B\""},{"path":"https://facelab.github.io/webmorph/reference/validate_stimlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a list of stimuli — validate_stimlist","title":"Validate a list of stimuli — validate_stimlist","text":"Check object list class stimlist. class stim, wrap stimlist. properly structured list without right class, add right class. img magick_image pointer dead, reloads imgpath.","code":""},{"path":"https://facelab.github.io/webmorph/reference/validate_stimlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a list of stimuli — validate_stimlist","text":"","code":"validate_stimlist(x, tem = FALSE)"},{"path":"https://facelab.github.io/webmorph/reference/validate_stimlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a list of stimuli — validate_stimlist","text":"x object tem require templates","code":""},{"path":"https://facelab.github.io/webmorph/reference/validate_stimlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a list of stimuli — validate_stimlist","text":"stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/webmorphR.html","id":null,"dir":"Reference","previous_headings":"","what":"webmorphR: Reproducible Face Stimuli — webmorphR","title":"webmorphR: Reproducible Face Stimuli — webmorphR","text":"Create reproducible image stimuli, specialised images webmorph.org templates. See https://debruine.github.io/webmorphR/ detailed tutorials.","code":""},{"path":"https://facelab.github.io/webmorph/reference/width.html","id":null,"dir":"Reference","previous_headings":"","what":"Image widths — width","title":"Image widths — width","text":"Image widths","code":""},{"path":"https://facelab.github.io/webmorph/reference/width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image widths — width","text":"","code":"width(stimuli, type = c(\"all\", \"min\", \"max\", \"unique\"))"},{"path":"https://facelab.github.io/webmorph/reference/width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image widths — width","text":"stimuli list class stimlist type whether return widths, min, max, unique widths","code":""},{"path":"https://facelab.github.io/webmorph/reference/width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image widths — width","text":"vector widths","code":""},{"path":"https://facelab.github.io/webmorph/reference/width.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image widths — width","text":"","code":"demo_stim() |> width() #> f_multi m_multi  #>     500     500"},{"path":"https://facelab.github.io/webmorph/reference/wm_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set/get global webmorph options — wm_opts","title":"Set/get global webmorph options — wm_opts","text":"Set/get global webmorph options","code":""},{"path":"https://facelab.github.io/webmorph/reference/wm_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set/get global webmorph options — wm_opts","text":"","code":"wm_opts(...)"},{"path":"https://facelab.github.io/webmorph/reference/wm_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set/get global webmorph options — wm_opts","text":"... One four: (1) nothing, returns options list; (2) name option element, returns value; (3) name-value pair sets corresponding option new value (returns nothing), (4) list option-value pairs sets corresponding arguments.","code":""},{"path":"https://facelab.github.io/webmorph/reference/wm_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set/get global webmorph options — wm_opts","text":"list options, values option, nothing","code":""},{"path":"https://facelab.github.io/webmorph/reference/wm_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set/get global webmorph options — wm_opts","text":"","code":"wm_opts() # see all options #> $connection #> A connection with                       #> description \"stdin\"    #> class       \"terminal\" #> mode        \"r\"        #> text        \"text\"     #> opened      \"opened\"   #> can read    \"yes\"      #> can write   \"no\"       #>  #> $fill #> [1] \"white\" #>  #> $line.color #> [1] \"blue\" #>  #> $plot #> [1] \"inline\" #>  #> $plot.maxheight #> [1] 10000 #>  #> $plot.maxwidth #> [1] 10000 #>  #> $pt.color #> [1] \"green\" #>  #> $server #> [1] \"https://webmorph.org\" #>  #> $verbose #> [1] TRUE #>   wm_opts(\"verbose\") # see value of webmorph.verbose #> [1] TRUE"},{"path":"https://facelab.github.io/webmorph/reference/write_stim.html","id":null,"dir":"Reference","previous_headings":"","what":"Write tems and images to files — write_stim","title":"Write tems and images to files — write_stim","text":"Write tems images files","code":""},{"path":"https://facelab.github.io/webmorph/reference/write_stim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write tems and images to files — write_stim","text":"","code":"write_stim(   stimuli,   dir = \".\",   names = NULL,   format = \"png\",   ...,   ask = interactive(),   overwrite = !ask )"},{"path":"https://facelab.github.io/webmorph/reference/write_stim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write tems and images to files — write_stim","text":"stimuli list class stimlist dir Directory save names vector stimulus names NULL use names fro stimuli list format output format \"png\", \"jpeg\", \"gif\" ... arguments pass magick::image_write ask ask want overwrite existing files overwrite whether overwrite existing files","code":""},{"path":"https://facelab.github.io/webmorph/reference/write_stim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write tems and images to files — write_stim","text":"list saved paths","code":""},{"path":"https://facelab.github.io/webmorph/reference/write_stim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write tems and images to files — write_stim","text":"","code":"if (FALSE) {   demo_stim() |> write_stim(\"test_faces\", format = \"jpg\") }"},{"path":"https://facelab.github.io/webmorph/reference/write_tps.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a TPS file from a stimlist — write_tps","title":"Create a TPS file from a stimlist — write_tps","text":"Create TPS file stimlist","code":""},{"path":"https://facelab.github.io/webmorph/reference/write_tps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a TPS file from a stimlist — write_tps","text":"","code":"write_tps(stimuli, path_to_tps = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/write_tps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a TPS file from a stimlist — write_tps","text":"stimuli list class stimlist path_to_tps optional filename save TPS file","code":""},{"path":"https://facelab.github.io/webmorph/reference/write_tps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a TPS file from a stimlist — write_tps","text":"text tps file","code":""},{"path":"https://facelab.github.io/webmorph/reference/write_tps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a TPS file from a stimlist — write_tps","text":"","code":"# set path_to_tps to save to a file demo_stim() |>   write_tps() |>   cat() #> LM=189 #> 210.740740740741\t-226.481481481481 #> 288.14817037037\t-226.388888888889 #> 210.648148148148\t-221.666666666667 #> 204.62962962963\t-223.333333333333 #> 203.333333333333\t-226.851851851852 #> 205.277777777778\t-231.481481481481 #> 210.740740740741\t-233.425925925926 #> 216.203703703704\t-231.296296296296 #> 217.87037037037\t-227.037037037037 #> 216.759259259259\t-223.611111111111 #> 287.962962962963\t-221.388888888889 #> 282.5\t-223.425925925926 #> 281.203703703704\t-227.037037037037 #> 282.962962962963\t-231.203703703704 #> 288.425925925926\t-233.425925925926 #> 294.166688888889\t-231.296296296296 #> 295.648148148148\t-226.666666666667 #> 293.981481481481\t-222.87037037037 #> 195\t-228.703703703704 #> 201.574074074074\t-223.611111111111 #> 210.555555555556\t-221.574074074074 #> 220.092592592593\t-224.722222222222 #> 227.87037037037\t-231.388888888889 #> 271.388888888889\t-231.481481481481 #> 279.074074074074\t-224.537037037037 #> 288.14817037037\t-221.481481481481 #> 297.592592592593\t-223.703703703704 #> 303.796296296296\t-228.703703703704 #> 201.481481481481\t-232.685185185185 #> 210.740740740741\t-233.888888888889 #> 219.722222222222\t-232.592592592593 #> 280\t-232.5 #> 288.518518518518\t-233.796296296296 #> 297.962962962963\t-232.314814814815 #> 191.388888888889\t-223.240740740741 #> 198.796296296296\t-218.425925925926 #> 208.796296296296\t-216.481481481481 #> 218.981481481481\t-218.425925925926 #> 226.203703703704\t-223.703703703704 #> 273.055555555556\t-223.796296296296 #> 280.092592592593\t-217.962962962963 #> 289.444444444444\t-215.740740740741 #> 299.259259259259\t-217.222222222222 #> 307.12962962963\t-221.666666666667 #> 206.388888888889\t-253.240740740741 #> 219.722222222222\t-247.962962962963 #> 228.981481481481\t-239.166666666667 #> 270.462962962963\t-239.444444444444 #> 280.462962962963\t-248.333333333333 #> 294.074074074074\t-253.611111111111 #> 241.388888888889\t-220.833333333333 #> 244.074074074074\t-231.296296296296 #> 244.259259259259\t-241.944444444444 #> 243.055555555556\t-252.037037037037 #> 240.740740740741\t-263.240740740741 #> 250.185185185185\t-280.648148148148 #> 258.425925925926\t-220.925925925926 #> 255.925925925926\t-231.574074074074 #> 255.740740740741\t-241.944444444444 #> 257.037037037037\t-252.222222222222 #> 258.981481481481\t-263.240740740741 #> 230\t-262.5 #> 226.851851851852\t-269.537037037037 #> 227.407407407407\t-277.037037037037 #> 234.351851851852\t-280.648148148148 #> 233.518518518519\t-275.648148148148 #> 270.37037037037\t-262.87037037037 #> 273.240740740741\t-269.62962962963 #> 272.962962962963\t-276.851851851852 #> 266.203703703704\t-280.555555555556 #> 266.296296296296\t-275.833333333333 #> 178.703703703704\t-214.444444444444 #> 185.833333333333\t-201.851851851852 #> 196.759259259259\t-196.666666666667 #> 212.777777777778\t-197.777777777778 #> 231.296296296296\t-206.018518518519 #> 230.740740740741\t-211.111111111111 #> 267.12962962963\t-210.648148148148 #> 267.12962962963\t-205.092592592593 #> 285.648148148148\t-197.314814814815 #> 300.370392592593\t-196.018518518519 #> 313.425948148148\t-201.388888888889 #> 321.574074074074\t-212.962962962963 #> 193.425925925926\t-204.074074074074 #> 210.37037037037\t-205.555555555556 #> 287.314814814815\t-205.277777777778 #> 303.333333333333\t-203.148148148148 #> 219.166666666667\t-309.814814814815 #> 230.555555555556\t-301.944466666667 #> 241.574074074074\t-297.314837037037 #> 250.277777777778\t-299.166666666667 #> 259.62962962963\t-296.944466666667 #> 270.925925925926\t-302.037037037037 #> 280.833333333333\t-308.888888888889 #> 231.388888888889\t-308.703703703704 #> 241.111111111111\t-307.777777777778 #> 250.462962962963\t-308.425925925926 #> 260.462962962963\t-307.5 #> 269.814814814815\t-308.425948148148 #> 231.388888888889\t-308.796296296296 #> 241.111111111111\t-307.777777777778 #> 250.555555555556\t-308.518518518518 #> 260.37037037037\t-307.592592592593 #> 269.814814814815\t-308.425948148148 #> 228.240740740741\t-317.222222222222 #> 238.981481481481\t-321.296296296296 #> 251.111111111111\t-322.592614814815 #> 263.703703703704\t-320.740740740741 #> 273.518518518518\t-316.203703703704 #> 163.888888888889\t-230.833333333333 #> 165.648148148148\t-258.333333333333 #> 170.555555555556\t-288.240740740741 #> 335.092614814815\t-229.444444444444 #> 334.351851851852\t-256.759259259259 #> 329.351874074074\t-287.314814814815 #> 150.185196296296\t-225.185185185185 #> 148.240740740741\t-241.481481481481 #> 152.314814814815\t-258.888888888889 #> 156.018518518519\t-275.833333333333 #> 163.703714814815\t-288.333355555555 #> 348.703725925926\t-223.240740740741 #> 351.759281481481\t-238.333333333333 #> 348.240740740741\t-255.648148148148 #> 344.722244444444\t-272.222222222222 #> 337.592592592593\t-286.296296296296 #> 175.740751851852\t-309.259259259259 #> 187.129640740741\t-330.648148148148 #> 205.37037037037\t-347.592592592593 #> 227.314814814815\t-359.444444444444 #> 251.574074074074\t-363.703725925926 #> 276.574074074074\t-358.425948148148 #> 297.12962962963\t-346.388888888889 #> 313.981503703704\t-328.888888888889 #> 324.259259259259\t-308.240740740741 #> 168.055566666667\t-203.148148148148 #> 176.481481481481\t-179.444444444444 #> 184.351851851852\t-156.851851851852 #> 199.444444444444\t-140.555555555556 #> 222.314814814815\t-131.759259259259 #> 248.796296296296\t-130.462962962963 #> 275.925925925926\t-131.944444444444 #> 298.333333333333\t-141.203703703704 #> 314.166688888889\t-157.87037037037 #> 323.148148148148\t-179.722233333333 #> 331.018518518518\t-202.407407407407 #> 189.722222222222\t-369.074074074074 #> 150.37037037037\t-310.925925925926 #> 135.555555555556\t-227.5 #> 145.833333333333\t-176.944444444444 #> 168.148159259259\t-135.925925925926 #> 200.648148148148\t-106.481481481481 #> 249.907407407407\t-93.7962962962963 #> 301.851851851852\t-108.333333333333 #> 334.166666666667\t-139.722222222222 #> 354.537037037037\t-178.240740740741 #> 364.814814814815\t-226.666666666667 #> 351.203703703704\t-308.703703703704 #> 313.796296296296\t-366.574074074074 #> 221.111111111111\t-280.185185185185 #> 214.259259259259\t-289.537037037037 #> 209.351851851852\t-301.388888888889 #> 280.648148148148\t-280.092592592593 #> 287.962962962963\t-289.907407407407 #> 292.685185185185\t-301.666688888889 #> 174.537037037037\t-251.388888888889 #> 186.851851851852\t-261.759259259259 #> 203.611111111111\t-266.574074074074 #> 325.462962962963\t-251.388888888889 #> 314.444444444444\t-262.12962962963 #> 298.796296296296\t-267.407407407407 #> 243.518518518519\t-283.333333333333 #> 242.12962962963\t-292.962985185185 #> 256.944444444444\t-283.333333333333 #> 258.518518518518\t-292.962985185185 #> 251.388888888889\t-341.018540740741 #> 251.574074074074\t-350.925948148148 #> 236.944444444444\t-332.777777777778 #> 250.925925925926\t-329.537037037037 #> 265.277777777778\t-332.777777777778 #> 243.796296296296\t-276.666666666667 #> 246.296296296296\t-279.537037037037 #> 253.888888888889\t-279.62962962963 #> 256.111111111111\t-276.481481481481 #> 225.833333333333\t-391.111111111111 #> 277.5\t-391.666666666667 #> 164.351851851852\t-244.814814814815 #> 167.685185185185\t-272.592592592593 #> 335.37037037037\t-242.87037037037 #> 332.037037037037\t-271.944444444444 #> ID=f_multi #> LM=189 #> 211.111111111111\t-214.444444444444 #> 286.481481481481\t-215.555555555556 #> 210.925925925926\t-210.277777777778 #> 204.907407407407\t-212.12962962963 #> 204.074074074074\t-215.185185185185 #> 205.740740740741\t-218.981481481481 #> 210.925925925926\t-221.111111111111 #> 216.388888888889\t-219.166666666667 #> 218.055555555556\t-215.185185185185 #> 216.851851851852\t-212.037037037037 #> 286.388888888889\t-211.388888888889 #> 280.833333333333\t-212.962962962963 #> 279.62962962963\t-216.018518518519 #> 281.296296296296\t-220.092592592593 #> 286.666666666667\t-222.037037037037 #> 292.129651851852\t-220.37037037037 #> 293.611111111111\t-216.203703703704 #> 292.314814814815\t-212.87037037037 #> 196.296296296296\t-216.944444444444 #> 202.314814814815\t-212.5 #> 210.833333333333\t-210.277777777778 #> 219.62962962963\t-212.592592592593 #> 228.333333333333\t-219.259259259259 #> 269.259259259259\t-219.907407407407 #> 277.592592592593\t-213.611111111111 #> 286.481481481481\t-211.296296296296 #> 295.277777777778\t-213.796296296296 #> 301.296296296296\t-218.518518518519 #> 202.592592592593\t-220.37037037037 #> 210.833333333333\t-221.574074074074 #> 219.814814814815\t-220.37037037037 #> 277.962962962963\t-221.018518518519 #> 286.574096296296\t-222.5 #> 295\t-221.481481481481 #> 192.037037037037\t-213.148148148148 #> 199.537037037037\t-208.148148148148 #> 208.981481481481\t-206.111111111111 #> 218.796296296296\t-206.851851851852 #> 226.574074074074\t-211.388888888889 #> 270.740740740741\t-212.222222222222 #> 278.518518518518\t-207.592592592593 #> 288.425925925926\t-206.666666666667 #> 298.055555555556\t-208.981481481481 #> 305.648148148148\t-213.981481481481 #> 206.944444444444\t-239.814814814815 #> 220.37037037037\t-234.537037037037 #> 230\t-226.388888888889 #> 267.12962962963\t-226.574074074074 #> 277.037037037037\t-235.648148148148 #> 290.37037037037\t-241.111111111111 #> 240.555555555556\t-209.074074074074 #> 243.333333333333\t-218.611111111111 #> 243.148148148148\t-229.444444444444 #> 241.666666666667\t-239.62962962963 #> 239.444444444444\t-250.092592592593 #> 248.611111111111\t-268.055555555556 #> 257.12962962963\t-209.259259259259 #> 254.537037037037\t-219.166666666667 #> 254.166666666667\t-229.814814814815 #> 255.185185185185\t-239.814814814815 #> 257.222222222222\t-250.555555555556 #> 229.074074074074\t-249.814814814815 #> 225.925925925926\t-256.111111111111 #> 226.018518518519\t-263.981481481481 #> 232.592592592593\t-267.5 #> 232.12962962963\t-262.222222222222 #> 268.333333333333\t-250.740740740741 #> 271.481481481481\t-257.222222222222 #> 271.296296296296\t-264.444444444444 #> 264.444444444444\t-267.962962962963 #> 264.907407407407\t-262.685185185185 #> 180.648148148148\t-205.740740740741 #> 186.574074074074\t-195 #> 197.407407407407\t-189.074085185185 #> 212.962962962963\t-188.518518518519 #> 232.962962962963\t-194.814814814815 #> 231.851851851852\t-201.574074074074 #> 266.666666666667\t-201.759259259259 #> 265.462962962963\t-195.277777777778 #> 285.277777777778\t-188.981481481481 #> 299.537037037037\t-189.444444444444 #> 310.462962962963\t-195.555555555556 #> 318.055555555556\t-207.037037037037 #> 194.907407407407\t-199.62962962963 #> 210.833333333333\t-198.240740740741 #> 286.851851851852\t-199.259259259259 #> 302.5\t-200.185185185185 #> 217.777777777778\t-297.12962962963 #> 228.611111111111\t-289.074096296296 #> 238.703703703704\t-285 #> 248.333333333333\t-287.129651851852 #> 258.148148148148\t-285.277777777778 #> 268.518518518518\t-290.092592592593 #> 278.240740740741\t-297.222244444444 #> 229.814814814815\t-295.555555555556 #> 238.796296296296\t-294.907407407407 #> 248.333333333333\t-295.833333333333 #> 258.425925925926\t-295.092592592593 #> 267.592592592593\t-296.111111111111 #> 229.814814814815\t-295.648148148148 #> 238.796296296296\t-294.907407407407 #> 248.425925925926\t-295.925925925926 #> 258.518518518518\t-295.092592592593 #> 267.685185185185\t-296.203703703704 #> 226.851851851852\t-302.962962962963 #> 236.851851851852\t-307.222222222222 #> 248.796296296296\t-308.055555555556 #> 261.203703703704\t-307.12962962963 #> 270.555555555556\t-303.333333333333 #> 165.277777777778\t-225.555555555556 #> 166.203703703704\t-252.314814814815 #> 169.907418518519\t-281.018518518518 #> 331.481503703704\t-228.055555555556 #> 330.185185185185\t-254.814814814815 #> 326.111111111111\t-282.87037037037 #> 150.277777777778\t-217.962962962963 #> 145.648148148148\t-232.962962962963 #> 147.685196296296\t-252.222222222222 #> 152.222222222222\t-269.074074074074 #> 162.314814814815\t-282.037037037037 #> 347.5\t-221.203703703704 #> 351.203703703704\t-236.388888888889 #> 348.148148148148\t-254.351851851852 #> 343.888888888889\t-270 #> 333.611111111111\t-284.074074074074 #> 173.611111111111\t-299.351851851852 #> 180.37037037037\t-316.203703703704 #> 199.62962962963\t-336.481503703704 #> 222.12962962963\t-349.62962962963 #> 249.166666666667\t-354.074074074074 #> 276.111111111111\t-349.259281481481 #> 298.703725925926\t-336.018518518518 #> 315.925925925926\t-317.5 #> 322.592592592593\t-300.740740740741 #> 169.537037037037\t-195.555555555556 #> 177.037037037037\t-170.833333333333 #> 183.51852962963\t-146.75927037037 #> 199.814814814815\t-133.333333333333 #> 223.703703703704\t-129.259259259259 #> 248.703703703704\t-131.111111111111 #> 275.092592592593\t-130.37037037037 #> 297.870392592593\t-135.092592592593 #> 314.351874074074\t-149.351862962963 #> 321.018540740741\t-171.851851851852 #> 327.7778\t-197.407407407407 #> 182.222222222222\t-357.87037037037 #> 148.796296296296\t-303.425925925926 #> 135.462962962963\t-223.055555555556 #> 146.203703703704\t-172.037037037037 #> 168.518518518519\t-133.055555555556 #> 201.944444444444\t-105 #> 249.444444444444\t-92.5925925925926 #> 299.166666666667\t-107.5 #> 331.481503703704\t-137.12962962963 #> 352.685207407407\t-176.759259259259 #> 361.944444444444\t-226.388888888889 #> 348.796296296296\t-304.814814814815 #> 315\t-358.148148148148 #> 219.537037037037\t-266.851851851852 #> 212.037037037037\t-276.666666666667 #> 207.12962962963\t-288.981481481481 #> 278.518518518518\t-267.407407407407 #> 286.111111111111\t-277.592592592593 #> 291.018518518518\t-290.185185185185 #> 175.648159259259\t-237.962962962963 #> 188.333333333333\t-247.962962962963 #> 204.814814814815\t-252.685185185185 #> 321.574074074074\t-239.907407407407 #> 310.185185185185\t-249.444444444444 #> 294.722222222222\t-253.703703703704 #> 241.203703703704\t-270.555555555556 #> 239.722222222222\t-280.092592592593 #> 255.462962962963\t-270.648148148148 #> 256.666666666667\t-280.37037037037 #> 249.074074074074\t-329.444444444444 #> 249.166666666667\t-340 #> 234.722222222222\t-321.018518518518 #> 248.888888888889\t-318.240762962963 #> 262.777777777778\t-321.018518518518 #> 242.037037037037\t-263.240740740741 #> 244.537037037037\t-266.666666666667 #> 252.592592592593\t-266.851851851852 #> 254.62962962963\t-263.611111111111 #> 222.037037037037\t-383.981481481481 #> 276.759259259259\t-384.444444444444 #> 165.185185185185\t-239.351851851852 #> 168.055555555556\t-267.222222222222 #> 331.574074074074\t-241.111111111111 #> 328.425925925926\t-268.333333333333 #> ID=m_multi"},{"path":"https://facelab.github.io/webmorph/reference/xget.html","id":null,"dir":"Reference","previous_headings":"","what":"Get named item when unsure of name — xget","title":"Get named item when unsure of name — xget","text":"user gives named vector list possibilities item want get, list possible names order, using integers indices.","code":""},{"path":"https://facelab.github.io/webmorph/reference/xget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get named item when unsure of name — xget","text":"","code":"xget(x, ..., .default = NULL)"},{"path":"https://facelab.github.io/webmorph/reference/xget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get named item when unsure of name — xget","text":"x named vector list ... possible names x priority order .default default value names found","code":""},{"path":"https://facelab.github.io/webmorph/reference/xget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get named item when unsure of name — xget","text":"list vector item","code":""},{"path":"https://facelab.github.io/webmorph/reference/xget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get named item when unsure of name — xget","text":"","code":"if (FALSE) { x <- c(h = 100, w = 200) width <- xget(x, \"width\", \"w\", 1) height <- xget(x, \"height\", \"h\", 2) }"},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0029001","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.2.9001","title":"webmorphR 0.0.2.9001","text":"Imports rsvg; needed draw_tem() called magick Fixed bug read_stim() lines length","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0029000","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.2.9000","title":"webmorphR 0.0.2.9000","text":"moved python functions webmorphR.dlib auto_delin() now wrapper fpp_auto_delin() (Face++) webmorphR.dlib::dlib_auto_delin() (python/dlib/face_recognition delineations). Manuals vignettes updated","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0019008","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.9008","title":"webmorphR 0.0.1.9008","text":"Reduced package dependencies, now requires R>=4.2.0 code examples use |> pipe facetrain() function training dlib shape predictor model (still really experimental) Various bug fixes","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0019007","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.9007","title":"webmorphR 0.0.1.9007","text":"Custom masks take lists mask argument now. added change_lines() function update lines templates. Updated crop_tem() handle stimlists different tems. Updated get_point() return long table. Added gglabel() ggplot-style annotations. Updated vignettes new functions. Changed template definitions stored","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0019006","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.9006","title":"webmorphR 0.0.1.9006","text":"Added python face detection auto_delin() local solution","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0019005","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.9005","title":"webmorphR 0.0.1.9005","text":"Changed label() default gravity = northwest location = +10+10 Added metrics() calculating facial-metrics.","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0019004","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.9004","title":"webmorphR 0.0.1.9004","text":"Fixed bug mask_oval() setting bounds manually reversed top bottom values. trans() now returns images sensible order. added ability rename images write_stim() to_size() crop argument added. Images plot() displayed correct aspect ratio RMarkdown files default now.","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0019003","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.9003","title":"webmorphR 0.0.1.9003","text":"demo imagesets removed demo_stim() needs load “london”, “smiling”, “composite”, “lisa”, “zoom”, “rainbow” webmorphR.stim using remotes::install_github(\"debruine/webmorphR.stim\") image_comp() calculate difference images way corresponds morph continuua differences crop_pad renamed crop_tem() frl_features renamed features() always, bug fixes numerous mention","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0019002","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.9002","title":"webmorphR 0.0.1.9002","text":"Deleted webmorph.org functions required login Added webmorph functions don’t require login: avg(), trans(), continuum(), loop()","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0019001","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.9001","title":"webmorphR 0.0.1.9001","text":"Fixed minor bugs Fixed bug converting rgb() values hex values < 10 Added ability set background grid_stim() plot() draw_tem() takes background color bg now Added plot_size() function return size last plot string paste Rmd chunks.","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0010","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.1.0","title":"webmorphR 0.0.1.0","text":"Broke plotting, new plot() function much better faster Added convenience functions: pad(), draw_tem(), grid_stim(), save_plot() oval_mask => mask_oval() faces => demo_stim() auto_delineate => auto_delin() Fixed function examples","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0009011","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.0.9011","title":"webmorphR 0.0.0.9011","text":"Upgraded Face++ auto-delin() 106 points 83. Masking auto-delin faces.","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0009010","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.0.9010","title":"webmorphR 0.0.0.9010","text":"mask() oval_mask() functions quick_delin()","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0009009","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.0.9009","title":"webmorphR 0.0.0.9009","text":"Bug fixes stimuli templates to_size() now takes vector width height, can easily use social_media_size() write_stim() now lets change format (png, jpeg, gif)","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0009008","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.0.9008","title":"webmorphR 0.0.0.9008","text":"Cleaned function names","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0009007","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.0.9007","title":"webmorphR 0.0.0.9007","text":"Forgot document changes Plotting functions webmorph.org integration Lots new vignettes","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0009001","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.0.9001","title":"webmorphR 0.0.0.9001","text":"Cleaned functions examples Added align() function, includes procrustes align","code":""},{"path":"https://facelab.github.io/webmorph/news/index.html","id":"webmorphr-0009000","dir":"Changelog","previous_headings":"","what":"webmorphR 0.0.0.9000","title":"webmorphR 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
