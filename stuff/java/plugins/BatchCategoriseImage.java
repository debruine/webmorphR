/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BatchCorrectTemplate.java
 *
 * Created on 06-Oct-2010, 17:26:24
 */

package plugins;

import Facemorph.psychomorph.Batchable;
import Facemorph.psychomorph.ImageZoomPanel;
import Facemorph.psychomorph.PsychoMorphForm;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Simple batchable to assign a set of image to groups, recorded in a text file
 * @author bpt
 */
public class BatchCategoriseImage extends javax.swing.JDialog implements Batchable {
    boolean next = false;
    ArrayList<String> view = new ArrayList<String>();
    File f2=null;

    /** Creates new form BatchCorrectTemplate */
    public BatchCategoriseImage() {
        super();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        centreButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        leftButton.setText("Left");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        rightButton.setText("Right");
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Please select the view label");

        centreButton.setText("Centre");
        centreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                centreButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(leftButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(centreButton)
                .addGap(37, 37, 37)
                .addComponent(rightButton)
                .addGap(121, 121, 121))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leftButton)
                    .addComponent(rightButton)
                    .addComponent(centreButton))
                .addGap(180, 180, 180))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        view.add("left");
        next=true;
    }//GEN-LAST:event_leftButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        view.add("right");
        next=true;
    }//GEN-LAST:event_rightButtonActionPerformed

    private void centreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centreButtonActionPerformed
        view.add("centre");
        next=true;
       // finish();
    }//GEN-LAST:event_centreButtonActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton centreButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton leftButton;
    private javax.swing.JButton rightButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean process(ImageZoomPanel izp, boolean single) {
     /*  Runnable runner = new Runnable() {
           public void run() {
               while(!next){}
               next=false;
           }
       };
       Thread t = new Thread(runner);
       t.start();
      */

        while (!next) try {
            Thread.sleep(100);
        } catch (InterruptedException ex) {
        }
        next=false;
        return true;
    }

    @Override
    public void finish() {
        try {
            FileWriter fw = new FileWriter(f2);
            for (int i=0; i<view.size(); i++)
                fw.write(view.get(i) + "\n");
            fw.flush();
            fw.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error opening output file: " + ex);
        }
        this.dispose();
    }

    @Override
    public boolean initialise(PsychoMorphForm psychomorph) {
         JFileChooser chooser = PsychoMorphForm.setUpFileDialog(new JFileChooser(), "Text Files", "txt");
      //  chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

            int ok = chooser.showSaveDialog(this);
            f2 = chooser.getSelectedFile();
            if (f2 == null || ok != JFileChooser.APPROVE_OPTION) {
                return false;
            }

        this.setVisible(true);
      return true;//  throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public String getName() {
        return "Categorise Image";
    }

    public boolean getReadTemplate() {
        return false;
    }

    public boolean getWriteTemplate() {
        return false;
    }

    public boolean getWriteImage() {
        return false;
    }

    
}
